---
openapi: 3.0.0
info:
  contact:
    email: pi-commerce@hipay.com
  description: |-
    The Gateway API allows you to get paid and manage orders and transactions.

    Please note: this documentation describes the Gateway API parameters and response fields and allows you to test the platform in real time.
    This page is to be used alongside the **[HiPay Enterprise Platform Overview documentation](/getting-started/platform-hipay-enterprise/overview/)**, which gives you more information and details on the HiPay Enterprise workflow. You may use both documents in parallel when integrating HiPay Enterprise.

    # Integration

    Choose from three types of integration to select the one best adapted to your business:

    ## Hosted integration

    HiPay Enterprise hosts your payment page on a secured site. With this option you can benefit from a single point of contact, adaptable payment pages, and the PCI-DSS standard. You can therefore outsource heavy security requirements that are related to payment acceptance.

    In order to use this integration, please refer to the **Generate Hosted Payment Page (`POST /hpayment`)** API service below.

    ## iFrame integration

    This is a hybrid solution in which the buyer remains on your website to make payment. In order to use this integration you need to generate a hosted payment page (as above) with a special template, allowing you to properly display it in an iFrame.

    For more information, please refer to the **Generate Hosted Payment Page (`POST /hpayment`)** documentation below.

    ## Integration via our API

    In this case, the payment page is hosted on your website, allowing you to have a unified, fully customized workflow. Please refer to the **Request New Order API (`POST Order`)** below for more information.

    Please note that if you want to execute transactions with credit or debit card payment products, you will need to tokenize card numbers beforehand by using the HiPay Enterprise Tokenization API.

    # Managing transactions

    Once a transaction is executed, you may need to perform operations on it, such as a refund, a capture, etc. To do so, please refer to the `maintenance` web service.

    You can also get all transaction details at any time by leveraging the `transaction` web services.

    Besides, you may need to be automatically informed when a transaction status gets updated. To this end, you need to leverage server-to-server notifications. For more information, please check the [HiPay Enterprise Overview](/getting-started/platform-hipay-enterprise/overview/#server-to-server-notifications).

    # Web service information

    ## Gateway API base URLs

    | Environment | Base URL |
    | --- | --- |
    | Stage | [https://stage-secure-gateway.hipay-tpp.com/rest/](https://stage-secure-gateway.hipay-tpp.com/rest/) |
    | Production | [https://secure-gateway.hipay-tpp.com/rest/](https://secure-gateway.hipay-tpp.com/rest/) |

    ## Authentication

    All requests to the HiPay Enterprise API require identification through *HTTP Basic Authentication*. Your API credentials can be found in the Integration section of your HiPay Enterprise back office. Most HTTP clients (including web browsers) have built-in support for HTTP basic authentication. If not, the following header must be included in all HTTP requests.

    `Authorization: Basic base64('API login>:<API password>')`
  title: HiPay Enterprise Gateway API
  version: 1.2.3
servers:
- description: Stage
  url: https://stage-secure-gateway.hipay-tpp.com/rest
- description: Production
  url: https://secure-gateway.hipay-tpp.com/rest
paths:
  /v1/hpayment:
    post:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forward'
          description: Order successfully created and transaction executed.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request was rejected due to a validation error.
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: An authentication error occurred/invalid credentials.
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Access to this resource is fordidden.
      security:
      - basicAuth: []
      tags:
      - payments
      description: |-
        This service allows you to **redirect your customer to a payment page
        (hosted by HiPay)** in order to proceed checkout. This service creates
        an order and returns a forward URL. This forward URL is dedicated to
        display a payment page with your CSS and validated payment products.
        After payment form validation, the checkout is processed and the customer is
        being returned to your website.

        According to transaction state and `authentication_indicator` parameter (see below), the customer will be redirected either to the accept or the decline page.

        There are two strategies for implementing this service:

        ### Hosted: Full redirection mode

        Once the payment page is created, you redirect your customer to it. Your customer is redirected back to your website once the transaction si executed.

        ### iFrame mode

        You may also display the payment page in an iFrame, in order to have a unified checkout workflow. To do so, you have to provide the `template` parameter with the value `iframe-js` (see below).
      operationId: generateHostedPaymentPage
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/hpayment'
        description: HPayment information
        required: true
      summary: Creates a secure payment page which you can redirect your customer
        to, in order to proceed checkout
  /v1/maintenance/transaction/{transaction_reference}:
    post:
      parameters:
      - description: The unique identifier of the transaction.
        example: "800000420435"
        in: path
        name: transaction_reference
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: The maintenance operation was executed successfully.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request was rejected due to a validation error.
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: An authentication error occurred/invalid credentials.
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Access to this resource is fordidden.
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Transaction was not found.
      security:
      - basicAuth: []
      tags:
      - maintenance
      description: Performs a maintenance operation on a given transaction.
      operationId: performMaintenanceOperation
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Maintenance'
        description: Maintenance information
        required: true
      summary: Performs a maintenance operation on a given transaction
  /v1/order:
    post:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Order successfully created and transaction executed.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request was rejected due to a validation error.
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: An authentication error occurred/invalid credentials.
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Access to this resource is fordidden.
      security:
      - basicAuth: []
      tags:
      - payments
      description: |-
        This service allows you to execute transactions through API with no need
        to redirect your customer to the payment page hosted by HiPay. This
        service supports payments with credit or debit cards as well as
        alternative payment methods.

        In **order** to make a payment with a credit or debit card, a token must
        have been generated beforehand. In fact, this service cannot receive
        credit or debit card numbers in clear. Instead, you must provide this
        service with a token associated to a card number. Use the HiPay
        Enterprise SDK for JavaScript in order to generate tokens.

        If you need to make payments with alternative payment methods, you can
        use this service directly. Note that the use of some alternative payment
        products implies that you redirect your user to an external URL. In such
        a case, the `forwardUrl` parameter will be set with the appropriate URL.
        Moreover, the activation of *3-D Secure* also implies a redirection of
        your customer.
      operationId: requestNewOrder
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputOrder'
        description: Order information
        required: true
      summary: Creates an order and a transaction based on payment details
  /v1/transaction:
    get:
      parameters:
      - description: Merchant unique order id. Return all the transactions related
          to an order id.
        example: ORDER_1487239265080
        in: query
        name: orderid
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetail'
          description: Transactions retrieved successfully.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request was rejected due to a validation error.
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: An authentication error occurred/invalid credentials.
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Access to this resource is fordidden.
      security:
      - basicAuth: []
      tags:
      - transaction
      description: Gets details of existing transactions related to a given order.
      operationId: getTransactionsByReference
      summary: Gets details of existing transactions related to a given order
  /v1/transaction/{transaction_reference}:
    get:
      parameters:
      - description: The unique identifier of the transaction.
        example: "800000420435"
        in: path
        name: transaction_reference
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetail'
          description: Transaction retrieved successfully.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request was rejected due to a validation error.
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: An authentication error occurred/invalid credentials.
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Access to this resource is fordidden.
      security:
      - basicAuth: []
      tags:
      - transaction
      description: Gets details of existing transactions based on a transaction ID.
      operationId: getTransactionByReference
      summary: Gets details of existing transactions based on a transaction ID
  /v2/available-payment-products:
    get:
      parameters:
      - description: |-
          **This parameter is specific to SEPA Direct Debit as well as credit or debit card payment products.**

          Electronic Commerce Indicator (ECI).

          The ECI indicates the security level at which the payment information is processed between the cardholder and merchant.

          ### Credit or debit card

          If the payment product is a credit or debit card:

          * `1`: MO/TO (Mail Order/Telephone Order)
          * `2`: MO/TO – Recurring
          * `7`: E-commerce with SSL/TLS Encryption
          * `9`: Recurring E-commerce

          A default ECI value can be set in the preferences page. An ECI value sent along in the transaction will overwrite the default ECI value.

          ### SEPA Direct Debit

          If the payment product is SEPA Direct Debit:

          * `7`: First transaction/one-shot transaction
          * `9`: Recurring transaction
        example:
        - 7
        explode: false
        in: query
        name: eci
        schema:
          default:
          - 7
          items:
            enum:
            - 1
            - 2
            - 7
            - 9
            type: integer
          type: array
      - description: |-
          Available payment products.
          `visa`, `mastercard`, `maestro`, `cb`, `3xcb`, `3xcb-no-fees`, `4xcb`, `4xcb-no-fees`, `american-express`, `bank-transfer`, `bcmc`, `bcmc-mobile`, `cbc-online`, `dexia-directnet`, `giropay`, `ideal`, `ing-homepay`, `kbc-online`, `klarnainvoice`, `paypal`, `paysafecard`, `payulatam`, `przelewy24`, `qiwi-wallet`, `sdd`, `sisal`, `sofort-uberweisung`, `yandex`, `aura`, `boleto-bancario`, `oxxo`, `itau`, `payshop`, `dankort`, `postepay`, `ukash`, `mercadopago`, `webmoney-transfer`, `diners`, `jcb`, `dcb-cz-tmobile`, `dcb-cz-o2`, `dcb-cz-vodafone`, `dcb-at-tmobile`, `dcb-at-a1`, `dcb-at-orange`, `dcb-at-drei`, `dcb-be-mobistar`, `dcb-ch-easypay`, `dcb-sg-singtel`, `dcb-it-mobilepay`, `sct`, `elo-card`, `dcb-be-proximus`, `postfinance-card`, `postfinance-efinance`, `carte-cadeau`, `mybank`, `safetypay`, `skrill`, `bnpp-4xcb`, `bnpp-3xcb`, `unionpay`, `alipay-pos`, `multi-payment`, `discover`, `sepa-refund-transfer`, `banco-do-brasil`, `bradesco`, `carte-accord`, `caixa`, `edankort`, `multibanco`, `dcb-es-pagosmovistar`, `cashu`, `moneybookers`, `afterpay`, `cofinoga`, `aurore`, `1eurocom`, `hipercard`, `santander-home-banking`, `santander-cash`, `banamex`, `bbva-bancomer`, `ecarte-bleue`, `credit-long`, `carte-titre-restaurant`, `alipay-ecommerce`, `divido`, `bacs`, `tpe`, `wechatpay`, `klarnacheckout`, `sofort-lastschrift`, `sepa-direct-debit`, `cup`, `bancontactqrcode`
        example:
        - visa
        - american-express
        explode: false
        in: query
        name: payment_product
        schema:
          items:
            enum:
            - visa
            - mastercard
            - maestro
            - cb
            - 3xcb
            - 3xcb-no-fees
            - 4xcb
            - 4xcb-no-fees
            - american-express
            - bank-transfer
            - bcmc
            - bcmc-mobile
            - cbc-online
            - dexia-directnet
            - giropay
            - ideal
            - ing-homepay
            - kbc-online
            - klarnainvoice
            - paypal
            - paysafecard
            - payulatam
            - przelewy24
            - qiwi-wallet
            - sdd
            - sisal
            - sofort-uberweisung
            - yandex
            - aura
            - boleto-bancario
            - oxxo
            - itau
            - payshop
            - dankort
            - postepay
            - ukash
            - mercadopago
            - webmoney-transfer
            - diners
            - jcb
            - dcb-cz-tmobile
            - dcb-cz-o2
            - dcb-cz-vodafone
            - dcb-at-tmobile
            - dcb-at-a1
            - dcb-at-orange
            - dcb-at-drei
            - dcb-be-mobistar
            - dcb-ch-easypay
            - dcb-sg-singtel
            - dcb-it-mobilepay
            - sct
            - elo-card
            - dcb-be-proximus
            - postfinance-card
            - postfinance-efinance
            - carte-cadeau
            - mybank
            - safetypay
            - skrill
            - bnpp-4xcb
            - bnpp-3xcb
            - unionpay
            - alipay-pos
            - multi-payment
            - discover
            - sepa-refund-transfer
            - banco-do-brasil
            - bradesco
            - carte-accord
            - caixa
            - edankort
            - multibanco
            - dcb-es-pagosmovistar
            - cashu
            - moneybookers
            - afterpay
            - cofinoga
            - aurore
            - 1eurocom
            - hipercard
            - santander-home-banking
            - santander-cash
            - banamex
            - bbva-bancomer
            - ecarte-bleue
            - credit-long
            - carte-titre-restaurant
            - alipay-ecommerce
            - divido
            - bacs
            - tpe
            - wechatpay
            - klarnacheckout
            - sofort-lastschrift
            - sepa-direct-debit
            - cup
            - bancontactqrcode
            type: string
          type: array
      - description: |-
          Available categories of payment products.
          `credit-card`, `debit-card`, `realtime-banking`, `ewallet`, `prepaid-card`, `open-invoice`, `credit-consumption`
        example:
        - credit-card
        explode: false
        in: query
        name: payment_product_category
        schema:
          items:
            enum:
            - credit-card
            - debit-card
            - realtime-banking
            - ewallet
            - prepaid-card
            - open-invoice
            - credit-consumption
            type: string
          type: array
      - description: The country code of the customer. This two-letter country code
          complies with ISO 3166-1 (alpha 2).
        example:
        - FR
        explode: false
        in: query
        name: customer_country
        schema:
          default:
          - FR
          items:
            enum:
            - AF
            - AL
            - DZ
            - AS
            - AD
            - AO
            - AI
            - AQ
            - AG
            - AR
            - AM
            - AW
            - AC
            - AU
            - AT
            - AZ
            - BS
            - BH
            - BD
            - BB
            - BY
            - BE
            - BZ
            - BJ
            - BM
            - BT
            - BO
            - BA
            - BW
            - BR
            - IO
            - VG
            - BN
            - BG
            - BF
            - BI
            - KH
            - CM
            - CA
            - IC
            - CV
            - BQ
            - KY
            - CF
            - EA
            - TD
            - CL
            - CN
            - CX
            - CC
            - CO
            - KM
            - CG
            - CD
            - CK
            - CR
            - HR
            - CU
            - CW
            - CY
            - CZ
            - CI
            - DK
            - DG
            - DJ
            - DM
            - DO
            - EC
            - EG
            - SV
            - GQ
            - ER
            - EE
            - ET
            - FK
            - FO
            - FJ
            - FI
            - FR
            - GF
            - PF
            - TF
            - GA
            - GM
            - GE
            - DE
            - GH
            - GI
            - GR
            - GL
            - GD
            - GP
            - GU
            - GT
            - GG
            - GN
            - GW
            - GY
            - HT
            - HN
            - HK
            - HU
            - IS
            - IN
            - ID
            - IR
            - IQ
            - IE
            - IM
            - IL
            - IT
            - JM
            - JP
            - JE
            - JO
            - KZ
            - KE
            - KI
            - XK
            - KW
            - KG
            - LA
            - LV
            - LB
            - LS
            - LR
            - LY
            - LI
            - LT
            - LU
            - MO
            - MK
            - MG
            - MW
            - MY
            - MV
            - ML
            - MT
            - MH
            - MQ
            - MR
            - MU
            - YT
            - MX
            - FM
            - MD
            - MC
            - MN
            - ME
            - MS
            - MA
            - MZ
            - MM
            - NA
            - NR
            - NP
            - NL
            - NC
            - NZ
            - NI
            - NE
            - NG
            - NU
            - NF
            - KP
            - MP
            - "NO"
            - OM
            - PK
            - PW
            - PS
            - PA
            - PG
            - PY
            - PE
            - PH
            - PN
            - PL
            - PT
            - PR
            - QA
            - RO
            - RU
            - RW
            - RE
            - WS
            - SM
            - SA
            - SN
            - RS
            - SC
            - SL
            - SG
            - SX
            - SK
            - SI
            - SB
            - SO
            - ZA
            - GS
            - KR
            - SS
            - ES
            - LK
            - BL
            - SH
            - KN
            - LC
            - MF
            - PM
            - VC
            - SD
            - SR
            - SJ
            - SZ
            - SE
            - CH
            - SY
            - ST
            - TW
            - TJ
            - TZ
            - TH
            - TL
            - TG
            - TK
            - TO
            - TT
            - TA
            - TN
            - TR
            - TM
            - TC
            - TV
            - UM
            - VI
            - UG
            - UA
            - AE
            - GB
            - US
            - UY
            - UZ
            - VU
            - VA
            - VE
            - VN
            - WF
            - EH
            - YE
            - ZM
            - ZW
            - AX
            type: string
          type: array
      - description: Base currency for this order. This three-character currency code
          complies with ISO 4217.
        example:
        - EUR
        explode: false
        in: query
        name: currency
        schema:
          default:
          - EUR
          items:
            enum:
            - AFN
            - AFA
            - ALL
            - ALK
            - DZD
            - ADP
            - AOA
            - AOK
            - AON
            - AOR
            - ARA
            - ARS
            - ARM
            - ARP
            - ARL
            - AMD
            - AWG
            - AUD
            - ATS
            - AZN
            - AZM
            - BSD
            - BHD
            - BDT
            - BBD
            - BYN
            - BYB
            - BYR
            - BEF
            - BEC
            - BEL
            - BZD
            - BMD
            - BTN
            - BOB
            - BOL
            - BOV
            - BOP
            - BAM
            - BAD
            - BAN
            - BWP
            - BRC
            - BRZ
            - BRE
            - BRR
            - BRN
            - BRB
            - BRL
            - GBP
            - BND
            - BGL
            - BGN
            - BGO
            - BGM
            - BUK
            - BIF
            - XPF
            - KHR
            - CAD
            - CVE
            - KYD
            - XAF
            - CLE
            - CLP
            - CLF
            - CNX
            - CNY
            - CNH
            - COP
            - COU
            - KMF
            - CDF
            - CRC
            - HRD
            - HRK
            - CUC
            - CUP
            - CYP
            - CZK
            - CSK
            - DKK
            - DJF
            - DOP
            - NLG
            - XCD
            - DDM
            - ECS
            - ECV
            - EGP
            - GQE
            - ERN
            - EEK
            - ETB
            - EUR
            - XEU
            - FKP
            - FJD
            - FIM
            - FRF
            - XFO
            - XFU
            - GMD
            - GEK
            - GEL
            - DEM
            - GHS
            - GHC
            - GIP
            - GRD
            - GTQ
            - GWP
            - GNF
            - GNS
            - GYD
            - HTG
            - HNL
            - HKD
            - HUF
            - ISK
            - ISJ
            - INR
            - IDR
            - IRR
            - IQD
            - IEP
            - ILS
            - ILP
            - ILR
            - ITL
            - JMD
            - JPY
            - JOD
            - KZT
            - KES
            - KWD
            - KGS
            - LAK
            - LVL
            - LVR
            - LBP
            - LSL
            - LRD
            - LYD
            - LTL
            - LTT
            - LUL
            - LUC
            - LUF
            - MOP
            - MKD
            - MKN
            - MGA
            - MGF
            - MWK
            - MYR
            - MVR
            - MVP
            - MLF
            - MTL
            - MTP
            - MRU
            - MRO
            - MUR
            - MXV
            - MXN
            - MXP
            - MDC
            - MDL
            - MCF
            - MNT
            - MAD
            - MAF
            - MZE
            - MZN
            - MZM
            - MMK
            - NAD
            - NPR
            - ANG
            - TWD
            - NZD
            - NIO
            - NIC
            - NGN
            - KPW
            - NOK
            - OMR
            - PKR
            - PAB
            - PGK
            - PYG
            - PEI
            - PEN
            - PES
            - PHP
            - PLN
            - PLZ
            - PTE
            - GWE
            - QAR
            - XRE
            - RHD
            - RON
            - ROL
            - RUB
            - RUR
            - RWF
            - SVC
            - WST
            - SAR
            - RSD
            - CSD
            - SCR
            - SLL
            - SGD
            - SKK
            - SIT
            - SBD
            - SOS
            - ZAR
            - ZAL
            - KRH
            - KRW
            - KRO
            - SSP
            - SUR
            - ESP
            - ESA
            - ESB
            - LKR
            - SHP
            - SDD
            - SDG
            - SDP
            - SRD
            - SRG
            - SZL
            - SEK
            - CHF
            - SYP
            - STN
            - STD
            - TJR
            - TJS
            - TZS
            - THB
            - TPE
            - TOP
            - TTD
            - TND
            - TRY
            - TRL
            - TMT
            - TMM
            - USD
            - USN
            - USS
            - UGX
            - UGS
            - UAH
            - UAK
            - AED
            - UYU
            - UYP
            - UYI
            - UZS
            - VUV
            - VEF
            - VEB
            - VND
            - VNN
            - CHE
            - CHW
            - XOF
            - YDD
            - YER
            - YUN
            - YUD
            - YUM
            - YUR
            - ZRN
            - ZRZ
            - ZMW
            - ZMK
            - ZWD
            - ZWR
            - ZWL
            type: string
          type: array
      - in: query
        name: payment_terminal
        schema:
          items:
            type: integer
          type: array
      - in: query
        name: initialize_payment_terminal
        schema:
          format: int32
          type: integer
      - example:
        - 1
        explode: false
        in: query
        name: operation
        schema:
          default:
          - 4
          items:
            enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            type: integer
          type: array
      - in: query
        name: acquirer_registration_id
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hipay.Gateway.AvailablePaymentProductBundle.Response.AvailablePaymentProduct.AvailablePaymentProduct_PaymentProduct_'
          description: Payment products list successfully returned.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hipay.Gateway.CommonBundle.Response.CommonResponse'
          description: The request was rejected due to a validation error.
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hipay.Gateway.CommonBundle.Response.CommonResponse'
          description: An authentication error occurred/invalid credentials.
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hipay.Gateway.CommonBundle.Response.CommonResponse'
          description: Access to this resource is fordidden.
      security:
      - basicAuth: []
      tags:
      - payment-products
      description: Returns the list of all available payment products for the merchant.
      operationId: get_available-payment-products
      summary: Get the list of all Payment product available by merchant
  /v2/security-settings:
    get:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hipay.Gateway.SecuritySettingBundle.Response.SecuritySetting.SecuritySetting'
          description: Hash algorithm successfully returned
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hipay.Gateway.CommonBundle.Response.CommonResponse'
          description: The request was rejected due to a validation error.
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hipay.Gateway.CommonBundle.Response.CommonResponse'
          description: An authentication error occurred/invalid credentials.
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hipay.Gateway.CommonBundle.Response.CommonResponse'
          description: Access to this resource is fordidden.
      security:
      - basicAuth: []
      tags:
      - security-settings
      description: Returns the list of all hash algorithms.
      operationId: get_security-settings
      summary: Get the hash algorithm
components:
  schemas:
    Common:
      description: Common model
      properties:
        accept_url:
          description: |-
            The URL to return your customer to once the payment process is completed successfully.

            For more information about the user redirection workflow, check the [HiPay Enterprise Overview](/getting-started/platform-hipay-enterprise/overview/#redirect-pages).
          example: https://developer.hipay.com/simulator/success/
          type: string
          x-sort: 105
        amount:
          description: Total order amount, calculated as the sum of purchased items,
            plus shipping fees (if present), plus tax fees (if present).
          example: 8.99
          minimum: 1
          type: number
          x-sort: 75
        authentication_indicator:
          additionalProperties:
            default: "0"
          description: |-
            **This parameter is specific to SEPA Direct Debit as well as credit or debit card payment products.**

            ### Credit or debit card

            If the payment product is a credit or debit card, this parameter indicates if the 3-D Secure authentication should be performed for this transaction.

            * `0`: Bypass 3-D Secure authentication.
            * `1`: 3-D Secure authentication if available.
            * `2`: 3-D Secure authentication mandatory.

            For more information about the 3-D Secure workflow, check the [HiPay Enterprise Overview](/getting-started/platform-hipay-enterprise/overview/#3-d-secure-integration).

            ### SEPA Direct Debit

            If the payment product is SEPA Direct Debit, this parameter indicates if the debit agreement (mandate) must be electronically signed or not.

            * `0`: Bypass electronic signature.
            * `1`: Ask for electronic signature.

            For more information about the SEPA Direct Debit integration (including examples), check the [HiPay Enterprise Overview](/getting-started/platform-hipay-enterprise/overview/#sepa-direct-debit-sdd).
          enum:
          - "0"
          - "1"
          - "2"
          example: "0"
          type: string
          x-sort: 15
        basket:
          description: |-
            Shopping cart details.

            Please refer to [HiPay Enterprise - Payment Gateway - Shopping cart managment](https://support.hipay.com/hc/fr/articles/115001660469-Payment-Gateway-Shopping-cart-management) technical documentation.
          example: '[{"european_article_numbering":"4711892728946","product_reference":"NF-a1690","name":"My
            first product","type":"good","quantity":1,"unit_price":8.99,"discount":0,"tax_rate":"8.2","total_amount":8.99}]'
          type: string
          x-sort: 69
        cancel_url:
          description: |-
            The URL to return your customer to after a system failure.

            For more information about the user redirection workflow, check the [HiPay Enterprise Overview](/getting-started/platform-hipay-enterprise/overview/#redirect-pages).
          example: https://developer.hipay.com/simulator/cancel/
          type: string
          x-sort: 125
        cdata1:
          deprecated: true
          description: Custom data 1. Deprecated, please use *custom_data* parameter.
          type: string
          x-sort: 156
        cdata10:
          deprecated: true
          description: Custom data 10. Deprecated, please use *custom_data* parameter.
          type: string
          x-sort: 157
        cdata2:
          deprecated: true
          description: Custom data 2. Deprecated, please use *custom_data* parameter.
          type: string
          x-sort: 156
        cdata3:
          deprecated: true
          description: Custom data 3. Deprecated, please use *custom_data* parameter.
          type: string
          x-sort: 156
        cdata4:
          deprecated: true
          description: Custom data 4. Deprecated, please use *custom_data* parameter.
          type: string
          x-sort: 156
        cdata5:
          deprecated: true
          description: Custom data 5. Deprecated, please use *custom_data* parameter.
          type: string
          x-sort: 156
        cdata6:
          deprecated: true
          description: Custom data 6. Deprecated, please use *custom_data* parameter.
          type: string
          x-sort: 156
        cdata7:
          deprecated: true
          description: Custom data 7. Deprecated, please use *custom_data* parameter.
          type: string
          x-sort: 156
        cdata8:
          deprecated: true
          description: Custom data 8. Deprecated, please use *custom_data* parameter.
          type: string
          x-sort: 156
        cdata9:
          deprecated: true
          description: Custom data 9. Deprecated, please use *custom_data* parameter.
          type: string
          x-sort: 156
        cid:
          description: Merchant's customer id. For fraud detection reasons.
          example: "283749291"
          type: string
          x-sort: 95
        currency:
          additionalProperties:
            default: EUR
          description: Base currency for this order. This three-character currency
            code complies with ISO 4217.
          enum:
          - FRF
          - SKK
          - EEK
          - TMT
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BRL
          - BSD
          - BTN
          - BWP
          - BYR
          - BZD
          - CAD
          - CDF
          - CHF
          - CLP
          - CNY
          - COP
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LVL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MUR
          - MVR
          - MWK
          - MXN
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SOS
          - SRD
          - STD
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - UYU
          - UZS
          - VEF
          - VND
          - VUV
          - TMM
          - WST
          - XAF
          - XCD
          - XOF
          - XPF
          - YER
          - ZAR
          - ZMK
          - ZWL
          example: EUR
          type: string
          x-sort: 70
        custom_data:
          description: Custom data. You can use these parameters to submit custom
            values you wish to show in HiPay back office transaction details, receive
            back in the API response messages, in the notifications or to activate
            specific FPS rules. Please note that cdata have been deprecated. If you
            are still using them, they can’t be combined with custom data. We thus
            recommend migrating to custom data as soon as possible.
          example: '{"internal_reference":"ORD_987465","customer_first_order":true,"other_sample_parameter":"Other
            sample value"}'
          type: string
          x-sort: 155
        decline_url:
          description: "The URL to return your customer to after the acquirer declines
            the payment.\n\nFor more information about the user redirection workflow,
            check the [HiPay Enterprise Overview](/getting-started/platform-hipay-enterprise/overview/#redirect-pages). "
          example: https://developer.hipay.com/simulator/decline/
          type: string
          x-sort: 110
        description:
          description: The order short description.
          example: A super short description here...
          type: string
          x-sort: 60
        eci:
          additionalProperties:
            default: "7"
          description: |-
            **This parameter is specific to SEPA Direct Debit as well as credit or debit card payment products.**

            Electronic Commerce Indicator (ECI).

            The ECI indicates the security level at which the payment information is processed between the cardholder and merchant.

            ### Credit or debit card

            If the payment product is a credit or debit card:

            * `1`: MO/TO (Mail Order/Telephone Order)
            * `2`: MO/TO – Recurring
            * `7`: E-commerce with SSL/TLS Encryption
            * `9`: Recurring E-commerce
            * `10`: TPE payment

            A default ECI value can be set in the preferences page. An ECI value sent along in the transaction will overwrite the default ECI value.

            ### SEPA Direct Debit

            If the payment product is SEPA Direct Debit:

            * `7`: First transaction/one-shot transaction
            * `9`: Recurring transaction
          enum:
          - "1"
          - "2"
          - "7"
          - "9"
          - "10"
          example: "9"
          type: string
          x-sort: 10
        exception_url:
          description: |-
            The URL to return your customer to after a system failure.

            For more information about the user redirection workflow, check the [HiPay Enterprise Overview](/getting-started/platform-hipay-enterprise/overview/#redirect-pages).
          example: https://developer.hipay.com/simulator/exception/
          type: string
          x-sort: 120
        expiration_limit:
          description: |-
            **This parameter is specific to provider COMPRAFACIL.**

            Validity period of the payment code in days.
          example: "3"
          type: integer
          x-sort: 206
        http_accept:
          description: This element should contain the exact content of the HTTP Accept
            header as sent to the merchant from the customer's browser.
          example: '*\/*'
          type: string
          x-sort: 135
        http_user_agent:
          description: This element should contain the exact content of the HTTP User-Agent
            header as sent to the merchant from the customer's browser.
          example: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)
          type: string
          x-sort: 140
        ipaddr:
          description: The IP address of your customer making a purchase.
          example: 127.0.0.1
          type: string
          x-sort: 100
        language:
          description: Locale code of your customer. This will be used to display
            payment page in correct language.
          example: en_GB
          type: string
          x-sort: 150
        long_description:
          description: Additional order description. You can show this description
            in HiPay payment page if desired.
          example: A super long description here...
          type: string
          x-sort: 65
        notify_url:
          description: This field allows you to override the notification URL, available
            in the configuration in the HiPay back office, with the URL of your choice
            that will process the notification sent by the HiPay platform.
          example: https://developer.hipay.com/simulator/notify/
          type: string
          x-sort: 130
        operation:
          additionalProperties:
            default: Authorization
          description: |-
            Transaction type:

            * `Sale` indicates that the transaction is automatically submitted for capture.
            * `Authorization` indicates that this transaction is sent for authorization only.
          enum:
          - Authorization
          - Sale
          example: Authorization
          type: string
          x-sort: 5
        orderid:
          description: Unique order ID.
          example: ORDER_1537532589263
          type: string
          x-sort: 1
          x-uniqId: true
        payment_connectivity:
          description: |-
            **This parameter is specific to providers QIWIWALLET and DIMOCO.**

            Origin of payment.
          example: web
          type: string
          x-sort: 206
        pending_url:
          description: |-
            The URL to return your customer to when the payment request was submitted to the acquirer but response is not yet available.

            For more information about the user redirection workflow, check the [HiPay Enterprise Overview](/getting-started/platform-hipay-enterprise/overview/#redirect-pages).
          example: https://developer.hipay.com/simulator/pending/
          type: string
          x-sort: 115
        phone_operator:
          description: |-
            **This parameter is specific to providers DIMOCO and SINGTEL.**

            Name of the mobile operator.
          example: FASTWEB
          type: string
          x-sort: 206
        prepaid_card_number:
          description: |-
            **This parameter is specific to provider ONEY (Gift Card).**

            Gift Card number.
          example: 6086300010000022383=35121011031363497
          type: string
          x-sort: 206
        prepaid_card_security_code:
          description: |-
            **This parameter is specific to provider ONEY (Gift Card).**

            Gift Card CVC.
          example: "123"
          type: string
          x-sort: 206
        shipping:
          description: The order shipping fee. It can be omitted if the shipping fee
            value is zero.
          example: 1.3
          type: number
          x-sort: 80
        tax:
          description: The order tax fee. It can be omitted if the order tax value
            is zero.
          example: 1.1
          type: number
          x-sort: 85
        tax_rate:
          description: The order tax rate.
          example: 1
          type: number
          x-sort: 90
        website_id:
          description: |-
            **This parameter is specific to providers PAGOSMOVISTAR and MOBILEPAY, only into the discover.**

            Website identifier.
          example: STWAK4897048
          type: string
          x-sort: 206
      title: Common
      type: object
    Error:
      description: Error model
      properties:
        code:
          description: Code
          type: integer
        description:
          description: Description
          type: string
        message:
          description: Message
          type: string
      title: Error
      type: object
    Forward:
      description: Forward
      properties:
        forwardUrl:
          description: ""
          example: https://stage-secure-gateway.hipay-tpp.com/payment/web/pay/df4d20da-7b6f-4fed-8603-c4ed3dca48
          type: string
        mid:
          description: ""
          example: 00001326589
          type: string
        order:
          $ref: '#/components/schemas/OrderResponse'
      title: Forward
      type: object
    Hipay.Gateway.AvailablePaymentProductBundle.Response.AvailablePaymentProduct.AvailablePaymentProduct_PaymentProduct_:
      description: AvailablePaymentProduct model
      properties:
        PaymentProduct:
          items:
            $ref: '#/components/schemas/PaymentProduct'
          type: array
      required:
      - PaymentProduct
      title: AvailablePaymentProduct[PaymentProduct]
      type: object
    Hipay.Gateway.CommonBundle.Response.CommonResponse:
      description: Common Error model
      properties:
        code:
          description: Code
          format: int32
          type: integer
        description:
          description: Description
          type: string
        message:
          description: Message
          type: string
      title: CommonResponse
      type: object
    Hipay.Gateway.SecuritySettingBundle.Response.SecuritySetting.SecuritySetting:
      description: SecuritySetting model
      properties:
        hashing_algorithm:
          description: Hashing Algorithm
          example: SHA1
          type: string
          x-sort: "1"
      title: SecuritySetting
      type: object
    InputOrder:
      allOf:
      - $ref: '#/components/schemas/Common'
      - $ref: '#/components/schemas/Order'
      description: InputOrder model
      properties:
        payment_product:
          description: The payment method used to proceed checkout. Depending on the
            payment product, parameters specific to the payment method are required.
            The list of payment products to display on the payment page.
          enum:
          - visa
          - mastercard
          - maestro
          - cb
          - 3xcb
          - 3xcb-no-fees
          - 4xcb
          - 4xcb-no-fees
          - american-express
          - bank-transfer
          - bcmc
          - bcmc-mobile
          - cbc-online
          - dexia-directnet
          - giropay
          - ideal
          - ing-homepay
          - kbc-online
          - klarnainvoice
          - paypal
          - paysafecard
          - payulatam
          - przelewy24
          - qiwi-wallet
          - sdd
          - sisal
          - sofort-uberweisung
          - yandex
          - aura
          - boleto-bancario
          - oxxo
          - itau
          - payshop
          - dankort
          - postepay
          - ukash
          - mercadopago
          - webmoney-transfer
          - diners
          - jcb
          - dcb-cz-tmobile
          - dcb-cz-o2
          - dcb-cz-vodafone
          - dcb-at-tmobile
          - dcb-at-a1
          - dcb-at-orange
          - dcb-at-drei
          - dcb-be-mobistar
          - dcb-ch-easypay
          - dcb-sg-singtel
          - dcb-it-mobilepay
          - sct
          - elo-card
          - dcb-be-proximus
          - postfinance-card
          - postfinance-efinance
          - carte-cadeau
          - mybank
          - safetypay
          - skrill
          - bnpp-4xcb
          - bnpp-3xcb
          - unionpay
          - alipay-pos
          - multi-payment
          - discover
          - sepa-refund-transfer
          - banco-do-brasil
          - bradesco
          - carte-accord
          - caixa
          - edankort
          - multibanco
          - dcb-es-pagosmovistar
          - cashu
          - moneybookers
          - afterpay
          - cofinoga
          - aurore
          - 1eurocom
          - hipercard
          - santander-home-banking
          - santander-cash
          - banamex
          - bbva-bancomer
          - ecarte-bleue
          - credit-long
          - carte-titre-restaurant
          - alipay-ecommerce
          - divido
          - bacs
          - tpe
          - wechatpay
          - klarnacheckout
          - sofort-lastschrift
          - sepa-direct-debit
          - cup
          - bancontactqrcode
          example: visa
          type: string
          x-sort: 20
      required:
      - orderid
      - payment_product
      - description
      - currency
      - amount
      - cardtoken
      title: InputOrder
      type: object
    Maintenance:
      description: Maintenance model
      properties:
        amount:
          description: Amount is required for partial maintenances. Do not specify
            amount for full captures or refunds.
          example: "3.5"
          type: string
        basket:
          description: |-
            Shopping cart details. **You must send only items that must be captured or refunded.**

            Please refer to [HiPay Enterprise - Payment Gateway - Shopping cart managment](https://support.hipay.com/hc/fr/articles/115001660469-Payment-Gateway-Shopping-cart-management) technical documentation.
          type: string
        currency:
          additionalProperties:
            default: EUR
          description: Base currency for this order. This three-character currency
            code complies with ISO 4217.
          enum:
          - FRF
          - SKK
          - EEK
          - TMT
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BRL
          - BSD
          - BTN
          - BWP
          - BYR
          - BZD
          - CAD
          - CDF
          - CHF
          - CLP
          - CNY
          - COP
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LVL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MUR
          - MVR
          - MWK
          - MXN
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SOS
          - SRD
          - STD
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - UYU
          - UZS
          - VEF
          - VND
          - VUV
          - TMM
          - WST
          - XAF
          - XCD
          - XOF
          - XPF
          - YER
          - ZAR
          - ZMK
          - ZWL
          example: EUR
          type: string
        operation:
          description: |-
            The operation to perform on the transaction.

            The payment gateway supports the following types of maintenance transactions.

            | Operation Type | Description |
            | -------------- | ----------- |
            | `capture` | A request instructing the payment gateway to capture a previously-authorized transaction, i.e. transfer the funds from the customer's bank account to the merchant's bank account. This transaction is always preceded by an authorization. |
            | `refund` | A request instructing the payment gateway to refund a previously captured transaction. A captured transaction can be partly or fully refunded. |
            | `cancel` | A request instructing the payment gateway to cancel a previously authorized transaction. Only authorized transactions can be cancelled, captured transactions must be refunded. |
            | `acceptChallenge` | A request instructing the payment gateway to accept a previously challenged transaction. |
            | `denyChallenge` | A request instructing the payment gateway to deny a previously challenged transaction. |
            | `finalize` | A request instructing the payment gateway to finalize an asynchronous operation. |
          enum:
          - capture
          - refund
          - cancel
          - acceptChallenge
          - denyChallenge
          - finalize
          example: capture
          type: string
        operation_id:
          description: Operation merchant ID. This value will be returned to merchant
            with the notifications related to this operation.
          example: 204OJ23LKJ234
          type: string
        source:
          description: |-
            To identify the origin of the transaction. Here are the authorized values for source property:

            `AUTO`, `SAPI`, `CONS`, `PAGE`, `TPE`, `RTRY`, `MANU`, `PREF`, `REVI`, `CMS`, `SSDK`, `CSDK`
          example: '{"integration_version":"1.9.0","brand":"DEVPORTAL","source":"CSDK","brand_version":"12.2.0"}'
          type: string
        sub_transaction_reference:
          description: Number of the subtransaction to be refunded.
          example: "134470136955"
          type: string
      required:
      - operation
      title: Maintenance
      type: object
    Operation:
      description: Operation model
      properties:
        authorizationCode:
          description: ""
          example: author
          type: string
          x-sort: 10
        authorizedAmount:
          description: ""
          example: "125.85"
          type: string
          x-sort: 45
        capturedAmount:
          description: ""
          example: "125.85"
          type: string
          x-sort: 50
        currency:
          description: ""
          example: EUR
          type: string
          x-sort: 65
        dateAuthorized:
          description: ""
          example: "2019-02-07T10:07:09+0000"
          type: string
          x-sort: 30
        dateCreated:
          description: ""
          example: "2019-02-07T10:07:09+0000"
          type: string
          x-sort: 20
        dateUpdated:
          description: ""
          example: "2019-02-07T10:07:09+0000"
          type: string
          x-sort: 25
        decimals:
          description: ""
          example: "2"
          type: string
          x-sort: 60
        message:
          description: ""
          example: Captured
          type: string
          x-sort: 40
        mid:
          description: ""
          example: 00001326589
          type: string
          x-sort: 5
        operation:
          description: The operation to perform on the transaction.
          enum:
          - capture
          - refund
          - cancel
          - acceptChallenge
          - denyChallenge
          example: capture
          type: string
          x-sort: 1
        refundedAmount:
          description: ""
          example: "0.00"
          type: string
          x-sort: 55
        status:
          description: ""
          example: "118"
          type: string
          x-sort: 35
        transactionReference:
          description: ""
          example: "800000968431"
          type: string
          x-sort: 15
      title: Operation
      type: object
    Order:
      description: Order model
      properties:
        bank_name:
          description: |-
            **This parameter is specific to the SEPA Direct Debit payment product.**

            Issuer Bank Name.
          example: BNP
          type: string
          x-sort: 205
        birthdate:
          description: Birth date of the customer (YYYYMMDD). For fraud detection
            reasons.
          example: "19880612"
          type: string
          x-sort: 220
        card_holder:
          description: |-
            **This parameter is specific to provider PAYON.**

            The customer's card holder.
          example: Cathy Doe
          type: string
          x-sort: 236
        cardtoken:
          description: |-
            **This parameter is specific to credit or debit card payment products.**

            This is the token obtained from the HiPay Enterprise Secure Vault API when tokenizing a credit or debit card. To generate a token, please refer to the [HiPay Enterprise Tokenization API documentation](/doc-api/enterprise/token/#/tokenization/createToken).
          example: db0eef6bfd4cd30ae4e30dc46b89d375b977656d04249741d8b60f533ffa0020
          type: string
          x-sort: 160
        carrier_description:
          description: |-
            **This parameter is specific to the 3x and 4x Carte Bancaire payment products.**

            Carrier description.
          example: La Poste, 27 Rue des Francs Bourgeois
          type: string
          x-sort: 190
        city:
          description: The customer's city.
          example: Paris
          type: string
          x-sort: 255
        country:
          description: The zip or postal code of the customer.
          example: FR
          type: string
          x-sort: 270
        delivery_date:
          description: |-
            **This parameter is specific to the 3x and 4x Carte Bancaire payment products.**

            Estimated delivery date. Format is YYYY-MM-DD.
          example: "2022-12-20"
          type: string
          x-sort: 180
        delivery_method:
          description: |-
            **This parameter is specific to the 3x and 4x Carte Bancaire payment products.**`

            The delivery method.
          enum:
          - EXPRESS24H
          - EXPRESS48H
          - STORE
          - STORE24H
          - CARRIER
          - CARRIER24H
          - RELAYPOINT
          - RELAYPOINT24H
          example: CARRIER
          type: string
          x-sort: 185
        device_fingerprint:
          description: |-
            This element should contain the value of the 'ioBB' hidden field.

            For more information about the device fingerprint integration, check the [HiPay Enterprise Overview](/getting-started/platform-hipay-enterprise/overview/#device-fingerprint-integration).
          example: 042q0aAXOogFCkNMNf94lis1ztsdwpJAn3AFS6wesUIr2q
          type: string
          x-sort: 145
        email:
          description: The customer's e-mail address.
          example: john.doe@foobar99.com
          type: string
          x-sort: 210
        firstname:
          description: The customer's first name. This value will be use to pre-fill
            cardholder name on credit card payment form.
          example: Cathy
          type: string
          x-sort: 230
        gender:
          description: |-
            Gender of the customer:

            * `M`: male
            * `F`: female
            * `U`: unknown
          enum:
          - U
          - F
          - M
          example: U
          type: string
          x-sort: 225
        house_extension:
          description: House extension of the customer.
          example: B
          type: string
          x-sort: 243
        house_number:
          description: House number of the customer.
          example: "101"
          type: string
          x-sort: 244
        iban:
          description: |-
            **This parameter is specific to the SEPA Direct Debit payment product.**

            International Bank Account Number (IBAN).
          example: FR1420041010050500013M02606
          type: string
          x-sort: 200
        issuer_bank_id:
          description: |-
            **This parameter is specific to the iDEAL and the SEPA Direct Debit payment products.**

            This is the Business Identifier Code (BIC) of the customer's issuer bank.
          example: BNPAFRPPXXX
          type: string
          x-sort: 165
        lastname:
          description: The customer's last name. This value will be use to pre-fill
            cardholder name on credit card payment form.
          example: Doe
          type: string
          x-sort: 235
        msisdn:
          description: |-
            **This parameter is specific to the 3x and 4x Carte Bancaire payment products.**

            The customer's ship-to mobile phone number.
          example: "33612345678"
          type: string
          x-sort: 216
        national_identification_number:
          description: |-
            **This parameter is specific to Astropay payment methods.**

            Customer’s personal identification number.
          example: AA 01 23 44 B
          type: string
          x-sort: 217
        order_category_code:
          description: |-
            **This parameter is specific to the 3x and 4x Carte Bancaire payment products.**

            The order category code.

            Please refer to the following list:

            | Code | Description |
            | ---- | ----------- |
            | 5499 | Alimentation & gastronomie |
            | 5571 | Auto & moto |
            | 7929 | Culture & divertissements |
            | 5261 | Maison & jardin |
            | 5200 | Electroménager |
            | 7278 | Enchères et achats groupés |
            | 5193 | Fleurs & cadeaux |
            | 5734 | Informatique & logiciels |
            | 7298 | Santé & beauté |
            | 0 | Services aux particuliers |
            | 7361 | Services aux professionnels |
            | 5941 | Sport |
            | 5651 | Vêtements & accessoires |
            | 4722 | Voyage & tourisme |
            | 5946 | Hifi, photo & vidéos |
            | 4812 | Téléphonie & communication |
          enum:
          - "5499"
          - "5571"
          - "7929"
          - "5261"
          - "5200"
          - "7278"
          - "5193"
          - "5734"
          - "7298"
          - "0"
          - "7361"
          - "5941"
          - "5651"
          - "4722"
          - "5946"
          - "4812"
          example: "5941"
          type: integer
          x-sort: 175
        phone:
          description: The customer's phone number.
          example: "33012345678"
          type: string
          x-sort: 215
        qiwiuser:
          description: |-
            **This parameter is specific to the Qiwi Wallet payment product.**

            The Qiwi user's ID, whom the invoice is issued to. It is the user's phone number, in international format.
          example: "33670985712"
          type: string
          x-sort: 170
        recipientinfo:
          description: Additional information about the customer (e.g., quality or
            function, company name, department, etc.).
          example: Dr.
          type: string
          x-sort: 240
        recurring_payment:
          additionalProperties:
            default: "0"
          description: |-
            **This parameter is specific to the SEPA Direct Debit payment product.**

            Indicates if the debit agreement will be created for a single-use or a multi-use.

            Possible values:

            * `0`: Generate a single-use agreement id.
            * `1`: Generate a multi-use agreement id.
          enum:
          - "0"
          - "1"
          example: "0"
          type: string
          x-sort: 195
        request_id:
          description: The request ID linked to the token.
          example: "7879454"
          type: integer
          x-sort: 161
        sales_channel:
          description: |-
            Sales channel :

            * `0`: Default.
            * `1`: Ecommerce API.
            * `2`: Hosted Payment Page.
            * `3`: POS.
          enum:
          - "0"
          - "1"
          - "2"
          - "3"
          example: ""
          type: string
          x-sort: 205
        shipto_city:
          description: The city to which the order is to be shipped.
          example: Paris
          type: string
          x-sort: 310
        shipto_country:
          description: Country code to which the order is being shipped. This two-letter
            country code complies with ISO 3166-1 (alpha 2).
          example: FR
          type: string
          x-sort: 325
        shipto_firstname:
          description: The first name of the order recipient.
          example: Cathy
          type: string
          x-sort: 285
        shipto_gender:
          description: |-
            **This parameter is specific to the 3x and 4x Carte Bancaire payment products.**

            Gender of the recipient:

            * `M`: male
            * `F`: female
            * `U`: unknown
          example: U
          type: string
          x-sort: 280
        shipto_house_number:
          description: House number of the recipient.
          example: "101"
          type: string
          x-sort: 299
        shipto_lastname:
          description: The last name of the order recipient.
          example: Doe
          type: string
          x-sort: 290
        shipto_msisdn:
          description: |-
            **This parameter is specific to the 3x and 4x Carte Bancaire payment products.**

            The recipient's ship-to mobile phone number.
          example: "3362345678"
          type: string
          x-sort: 276
        shipto_phone:
          description: |-
            **This parameter is specific to the 3x and 4x Carte Bancaire payment products.**

            The recipient's ship-to phone number.
          example: "33112345678"
          type: string
          x-sort: 275
        shipto_recipientinfo:
          description: Additional information about the order recipient (e.g., quality
            or function, company name, department, etc.).
          example: Dr.
          type: string
          x-sort: 295
        shipto_state:
          description: The USA state or Canada state to which the order is being shipped.
            Send this information only if the shipping country is US (USA) or CA (Canada).
          type: string
          x-sort: 315
        shipto_streetaddress:
          description: Street address to which the order is to be shipped.
          example: 101 Rue de Rivoli
          type: string
          x-sort: 300
        shipto_streetaddress2:
          description: The additional information about address to which the order
            is to be shipped (e.g., building, floor, flat, etc.).
          example: Immeuble B
          type: string
          x-sort: 305
        shipto_zipcode:
          description: The zip or postal code to which the order is being shipped.
          example: "75001"
          type: string
          x-sort: 320
        soft_descriptor:
          description: Billing descriptor for machine learning.
          example: Dell Inspiron 15 3583 (i3583-3112BLK-PFR)
          type: string
          x-sort: 205
        source:
          description: |-
            To identify the origin of the transaction. Here are the authorized values for source property:

            `AUTO`, `SAPI`, `CONS`, `PAGE`, `TPE`, `RTRY`, `MANU`, `PREF`, `REVI`, `CMS`, `SSDK`, `CSDK`
          example: '{"integration_version":"1.9.0","brand":"DEVPORTAL","source":"CSDK","brand_version":"12.2.0"}'
          type: string
          x-sort: 146
        state:
          description: The USA state or the Canada state of the customer making the
            purchase. Send this information only if the address country of the customer
            is US (USA) or CA (Canada).
          type: string
          x-sort: 260
        streetaddress:
          description: Street address of the customer.
          example: 101 Rue de Rivoli
          type: string
          x-sort: 245
        streetaddress2:
          description: Additional address information of the customer (e.g., building,
            floor, flat, etc.).
          example: Immeuble B
          type: string
          x-sort: 250
        zipcode:
          description: The zip or postal code of the customer.
          example: "75001"
          type: string
          x-sort: 265
      title: Order
      type: object
    OrderResponse:
      description: Order Response model
      properties:
        amount:
          description: ""
          example: "125.75"
          type: string
        attempts:
          description: ""
          example: "0"
          type: string
        currency:
          description: ""
          example: EUR
          type: string
        customerId:
          description: ""
          example: "283749291"
          type: string
        dateCreated:
          description: ""
          example: "2019-02-07T13:57:08+0000"
          type: string
        decimals:
          description: ""
          example: "2"
          type: string
        email:
          description: ""
          example: john.doe@foobar99.com
          type: string
        id:
          description: ""
          example: "1549547828947"
          type: string
        language:
          description: ""
          example: en_GB
          type: string
        shipping:
          description: ""
          example: "0"
          type: string
        tax:
          description: ""
          example: "1.1"
          type: string
      title: Order Response
      type: object
    PaymentProduct:
      description: PaymentProduct model
      properties:
        code:
          description: Code
          example: visa
          type: string
          x-sort: "5"
        customer_description:
          description: Customer Description
          type: string
          x-sort: "15"
        description:
          description: Description
          example: VISA
          type: string
          x-sort: "10"
        id:
          description: Id
          example: 52DY02WM
          type: string
          x-sort: "1"
        payment_product_category_code:
          description: Payment Product Category Code
          example: credit-card
          type: string
          x-sort: "20"
        tokenizable:
          description: Tokenizable
          example: "true"
          type: boolean
          x-sort: "25"
      title: PaymentProduct
      type: object
    ThreeDSecure:
      description: ThreeDSecure model
      properties:
        authenticationMessage:
          description: ""
          example: ""
          type: string
        authenticationStatus:
          description: ""
          example: ""
          type: string
        authenticationToken:
          description: ""
          example: ""
          type: string
        eci:
          description: ""
          example: "6"
          type: string
        enrollmentMessage:
          description: ""
          example: Cardholder Not Enrolled
          type: string
        enrollmentStatus:
          description: ""
          example: "N"
          type: string
        xid:
          description: ""
          example: ""
          type: string
      title: ThreeDSecure
      type: object
    Transaction:
      description: Transaction model
      properties:
        attemptId:
          description: Attempt identifier.
          example: "1"
          type: integer
          x-sort: 20
        authorizationCode:
          description: ""
          example: author
          type: string
          x-sort: 25
        authorizedAmount:
          description: ""
          example: "125.85"
          type: string
          x-sort: 60
        avsResult:
          description: ""
          type: string
          x-sort: 105
        capturedAmount:
          description: Captured amount.
          example: "125.75"
          type: string
          x-sort: 65
        creditedAmount:
          description: Total credited.
          type: string
          x-sort: 75
        currency:
          description: ""
          example: EUR
          type: string
          x-sort: 85
        cvcResult:
          description: ""
          type: string
          x-sort: 110
        dateAuthorized:
          description: ""
          example: "2019-02-07T10:07:09+0000"
          type: string
          x-sort: 45
        dateCreated:
          description: ""
          example: "2019-02-07T10:07:09+0000"
          type: string
          x-sort: 35
        dateUpdated:
          description: |-
            Date of last status change.

            This date must comply with ISO 8601.
          type: string
          x-sort: 40
        debitAgreement:
          allOf:
          - $ref: '#/components/schemas/debitAgreement'
          type: object
          x-sort: 145
        decimals:
          description: ""
          example: "2"
          type: string
          x-sort: 80
        deviceId:
          description: ""
          type: string
          x-sort: 100
        eci:
          description: |-
            Electronic Commerce Indicator (ECI).

            The Electronic Commerce Indicator (ECI) is used by acquirers/issuers
            to determine the type of transaction being processed. The ECI value
            should represent the source of the transaction request. That is, the
            environment that the cardholder used to provide the payment card details
            to the merchant. It is important that merchants set the correct ECI
            value during transaction processing to ensure that appropriate merchant
            service rates are received.
          example: "7"
          type: integer
          x-sort: 115
        forwardUrl:
          description: URL of the page on which to redirect the customer.
          type: string
          x-sort: 10
        fraudScreening:
          allOf:
          - $ref: '#/components/schemas/fraud'
          description: Fraud screening result.
          type: object
          x-sort: 135
        ipAddress:
          description: ""
          example: 0.0.0.0
          type: string
          x-sort: 90
        ipCountry:
          description: ""
          example: 0.0.0.0
          type: string
          x-sort: 95
        message:
          type: string
          x-sort: 55
        mid:
          description: |-
            Merchant id (MID).

            Unique identifier assigned to the merchant.
          type: integer
          x-sort: 15
        order:
          allOf:
          - $ref: '#/components/schemas/OrderResponse'
          description: Represents a payment transaction.
          type: object
          x-sort: 140
        paymentMethod:
          allOf:
          - $ref: '#/components/schemas/paymentMethod'
          description: The payment method used for processing current transaction.
          type: object
          x-sort: 125
        paymentProduct:
          description: The payment product used for processing current transaction.
          example: visa
          type: string
          x-sort: 120
        reason:
          allOf:
          - $ref: '#/components/schemas/reason'
          description: The numeric value of the error.
          type: object
          x-sort: 5
        refundedAmount:
          description: Refunded amount.
          example: 00.00
          type: string
          x-sort: 70
        state:
          description: Transaction state.
          example: completed
          type: string
          x-sort: 1
        status:
          description: Transaction status.
          example: "116"
          type: integer
          x-sort: 50
        threeDSecure:
          allOf:
          - $ref: '#/components/schemas/ThreeDSecure'
          description: Represents a payment transaction.
          type: object
          x-sort: 130
        transactionReference:
          description: Unique Transaction Identifier.
          example: "800000790677"
          type: string
          x-sort: 30
      title: Transaction
      type: object
    TransactionDetail:
      description: Transaction detail
      properties:
        transaction:
          allOf:
          - $ref: '#/components/schemas/Transaction'
          description: ""
          type: object
      title: Transaction detail
      type: object
    debitAgreement:
      description: Debit Agreement model
      properties:
        id:
          type: string
        status:
          type: string
      title: Debit Agreement
      type: object
    fraud:
      description: Fraud screening model
      properties:
        result:
          description: ""
          example: ACCEPTED
          type: string
        review:
          description: ""
          example: ""
          type: string
        scoring:
          description: ""
          example: "0"
          type: string
      title: Fraud screening
      type: object
    hpayment:
      allOf:
      - $ref: '#/components/schemas/Common'
      - $ref: '#/components/schemas/Order'
      description: HPayment model
      properties:
        css:
          description: URL to merchant style sheet. **HTTPS protocol is required.**
          example: https://developer.hipay.com/misc/simulator/css-responsive.css
          type: string
          x-sort: 30
        display_selector:
          description: |-
            Enable/disable the payment products selector. Possible values:

            * `0`: the selector is not displayed
            * `1`: the selector is displayed
          enum:
          - 0
          - 1
          example: "1"
          type: integer
          x-sort: 45
        merchant_display_name:
          description: The merchant name displayed on payment page, otherwise the
            name is retrieved from order.
          example: ACME Consolidated
          type: string
          x-sort: 40
        payment_product_category_list:
          additionalProperties:
            default: credit-card
          description: |-
            The categories of payment products to be displayed on the payment page.

            `credit-card`, `debit-card`, `realtime-banking`, `ewallet`, `prepaid-card`, `open-invoice`, `credit-consumption`
          enum:
          - credit-card
          - debit-card
          - realtime-banking
          - ewallet
          - prepaid-card
          - open-invoice
          - credit-consumption
          example: credit-card
          type: string
          x-sort: 25
        payment_product_list:
          description: |-
            The list of payment products to display on the payment page.

            `visa`, `mastercard`, `maestro`, `cb`, `3xcb`, `3xcb-no-fees`, `4xcb`, `4xcb-no-fees`, `american-express`, `bank-transfer`, `bcmc`, `bcmc-mobile`, `cbc-online`, `dexia-directnet`, `giropay`, `ideal`, `ing-homepay`, `kbc-online`, `klarnainvoice`, `paypal`, `paysafecard`, `payulatam`, `przelewy24`, `qiwi-wallet`, `sdd`, `sisal`, `sofort-uberweisung`, `yandex`, `aura`, `boleto-bancario`, `oxxo`, `itau`, `payshop`, `ukash`, `webmoney-transfer`, `elo-card`, `carte-cadeau`, `safetypay`, `skrill`, `bnpp-4xcb`, `bnpp-3xcb`, `discover`, `banco-do-brasil`, `bradesco`, `caixa`, `multibanco`, `cofinoga`, `hipercard`, `santander-home-banking`, `santander-cash`, `banamex`, `bbva-bancomer`, `credit-long`, `carte-titre-restaurant`, `alipay-ecommerce`, `divido`, `bacs`, `wechatpay`, `klarnacheckout`, `cup`, `bancontactqrcode`
          example: mastercard,visa,american-express
          type: string
          x-sort: 20
        template:
          description: |-
            The template name. Possible values:

            * `basic-js` : Template with customizable CSS
            * `basic` [Deprecated] : Template with customizable CSS
            * `iframe-js` : Template with hosted iFrame integration
            * `iframe` [Deprecated] : Template with hosted iFrame integration
            * `autodetection` : Automatic detection of the brand of the card, if the merchant has the option
          enum:
          - basic-js
          - iframe-js
          - autodetection
          - basic
          - iframe
          example: basic-js
          type: string
          x-sort: 35
        time_limit_to_pay:
          description: 'The time limit to pay allows you to specify the validity period
            of a payment page in seconds starting from the moment the payment link
            (forwardUrl) is generated. If empty, default value is fixed to 7 days.
            Max value: 24 days (2140000 seconds).'
          example: "1800"
          type: string
          x-sort: 55
      required:
      - orderid
      - description
      - currency
      - amount
      title: HPayment
      type: object
    paymentMethod:
      description: Payment model
      properties:
        brand:
          description: ""
          type: string
        cardExpiryMonth:
          description: ""
          example: "03"
          type: string
        cardExpiryYear:
          description: ""
          example: "2020"
          type: string
        cardHolder:
          description: ""
          example: JOHN DOE
          type: string
        country:
          description: The country code where payment method was issued.
          example: US
          type: string
        issuer:
          description: |-
            Name of the financial institution that
            issued the payment method.
          type: string
        pan:
          description: ""
          type: string
        token:
          description: ""
          type: string
      title: Payment
      type: object
    reason:
      description: Reason model
      properties:
        code:
          description: ""
          type: string
        message:
          description: ""
          type: string
      title: Reason
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
tags:
- description: Everything you need to create orders and transactions
  name: payments
- description: Perform operations (capture, refund) on transactions
  name: maintenance
- description: Request all the details of existing transactions and orders
  name: transaction
- description: Get the list of all available Payment products
  name: payment-products
- description: Get the hash algorithm
  name: security-settings
externalDocs:
  description: Find out more about HiPay
  url: https://developer.hipay.com/
...
