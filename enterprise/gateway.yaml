openapi: 3.0.0
info:
  title: HiPay Enterprise Gateway API
  description: |2-

    The Gateway API allows you to get paid and manage orders and transactions.

    Please note: this documentation describes the Gateway API parameters and response fields and allows you to test the platform in real time.

    ## Gateway API base URLs

    | Environment | Base URL |
    | --- | --- |
    | Stage | [https://stage-secure-gateway.hipay-tpp.com/rest/](https://stage-secure-gateway.hipay-tpp.com/rest/) |
    | Production | [https://secure-gateway.hipay-tpp.com/rest/](https://secure-gateway.hipay-tpp.com/rest/) |

    ## Authentication

    All requests to the HiPay Enterprise API require identification through *HTTP Basic Authentication*. Your API credentials can be found in the Integration section of your HiPay Enterprise back office. Most HTTP clients (including web browsers) have built-in support for HTTP basic authentication. If not, the following header must be included in all HTTP requests.

    `Authorization: Basic base64('API login>:<API password>')`
  contact:
    email: pi-commerce@hipay.com
  version: 1.2.3
servers:
- url: https://stage-secure-gateway.hipay-tpp.com/rest
  description: Stage
- url: https://secure-gateway.hipay-tpp.com/rest
  description: Production
paths:
  /v1/hpayment:
    post:
      tags:
      - payments
      summary: Creates a secure payment page which you can redirect your customer
        to, in order to proceed checkout
      description: |2-

         This service allows you to **redirect your customer to a payment page
        (hosted by HiPay)** in order to proceed checkout. This service creates
        an order and returns a forward URL. This forward URL is dedicated to
        display a payment page with your CSS and validated payment products.
        After payment form validation, the checkout is processed and the customer is
        being returned to your website.

        According to transaction state and `authentication_indicator` parameter (see below), the customer will be redirected either to the accept or the decline page.

        There are two strategies for implementing this service:

        ### Hosted: Full redirection mode

        Once the payment page is created, you redirect your customer to it. Your customer is redirected back to your website once the transaction si executed.

        ### iFrame mode

        You may also display the payment page in an iFrame, in order to have a unified checkout workflow. To do so, you have to provide the `template` parameter with the value `iframe-js` (see below).
      operationId: generateHostedPaymentPage
      requestBody:
        description: HPayment information
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/hpayment'
      responses:
        '200':
          description: Order successfully created and transaction executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forward'
        '400':
          description: The request was rejected due to a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: An authentication error occurred/invalid credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Access to this resource is fordidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - basicAuth: [
          ]
  /v1/maintenance/transaction/{transaction_reference}:
    post:
      tags:
      - maintenance
      summary: Performs a maintenance operation on a given transaction
      description: Performs a maintenance operation on a given transaction.
      operationId: performMaintenanceOperation
      parameters:
      - name: transaction_reference
        in: path
        description: The unique identifier of the transaction.
        required: true
        schema:
          type: string
        example: '800000420435'
      requestBody:
        description: Maintenance information
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Maintenance'
      responses:
        '200':
          description: The maintenance operation was executed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
        '400':
          description: The request was rejected due to a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: An authentication error occurred/invalid credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Access to this resource is fordidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Transaction was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - basicAuth: [
          ]
  /v1/order:
    post:
      tags:
      - payments
      summary: Creates an order and a transaction based on payment details
      description: |2-

        This service allows you to execute transactions through API with no need
        to redirect your customer to the payment page hosted by HiPay. This
        service supports payments with credit or debit cards as well as
        alternative payment methods.

        In **order** to make a payment with a credit or debit card, a token must
        have been generated beforehand. In fact, this service cannot receive
        credit or debit card numbers in clear. Instead, you must provide this
        service with a token associated to a card number. Use the HiPay
        Enterprise SDK for JavaScript in order to generate tokens.

        If you need to make payments with alternative payment methods, you can
        use this service directly. Note that the use of some alternative payment
        products implies that you redirect your user to an external URL. In such
        a case, the `forwardUrl` parameter will be set with the appropriate URL.
        Moreover, the activation of *3-D Secure* also implies a redirection of
        your customer.
      operationId: requestNewOrder
      requestBody:
        description: Order information
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputOrder'
      responses:
        '200':
          description: Order successfully created and transaction executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: The request was rejected due to a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: An authentication error occurred/invalid credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Access to this resource is fordidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - basicAuth: [
          ]
  /v1/transaction/{transaction_reference}:
    get:
      tags:
      - transaction
      summary: Gets details of existing transactions based on a transaction ID
      description: Gets details of existing transactions based on a transaction ID.
      operationId: getTransactionByReference
      parameters:
      - name: transaction_reference
        in: path
        description: The unique identifier of the transaction.
        required: true
        schema:
          type: string
        example: '800000420435'
      responses:
        '200':
          description: Transaction retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetail'
        '400':
          description: The request was rejected due to a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: An authentication error occurred/invalid credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Access to this resource is fordidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - basicAuth: [
          ]
  /v1/transaction:
    get:
      tags:
      - transaction
      summary: Gets details of existing transactions related to a given order
      description: Gets details of existing transactions related to a given order.
      operationId: getTransactionsByReference
      parameters:
      - name: orderid
        in: query
        description: Merchant unique order id. Return all the transactions related
          to an order id.
        required: true
        schema:
          type: string
        example: ORDER_1487239265080
      responses:
        '200':
          description: Transactions retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetail'
        '400':
          description: The request was rejected due to a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: An authentication error occurred/invalid credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Access to this resource is fordidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - basicAuth: [
          ]
  /v2/available-payment-products:
    get:
      description: Returns the list of all available payment products for the merchant.
      operationId: get_available-payment-products
      parameters:
      - description: |-
          **This parameter is specific to SEPA Direct Debit as well as credit or debit card payment products.**
          Electronic Commerce Indicator (ECI).
          The ECI indicates the security level at which the payment information is processed between the cardholder and merchant.
          ### Credit or debit card
          If the payment product is a credit or debit card:
          - `1`: MO/TO (Mail Order/Telephone Order)
          - `2`: MO/TO – Recurring
          - `7`: E-commerce with SSL/TLS Encryption
          - `9`: Recurring E-commerce
          A default ECI value can be set in the preferences page. An ECI value sent along in the transaction will overwrite the default ECI value.
          ### SEPA Direct Debit
          If the payment product is SEPA Direct Debit:
          - `7`: First transaction/one-shot transaction
          - `9`: Recurring transaction
        example:
        - 7
        explode: false
        in: query
        name: eci
        schema:
          default:
          - 7
          items:
            enum:
            - 1
            - 2
            - 7
            - 9
            type: integer
          type: array
      - description: "Available payment products.\n                \n- `visa`, `mastercard`,\
          \ `maestro`, `cb`, `3xcb`, `3xcb-no-fees`, `4xcb`, `4xcb-no-fees`, `american-express`,\
          \ `bank-transfer`, `bcmc`, `bcmc-mobile`, `cbc-online`, `dexia-directnet`,\
          \ `giropay`, `ideal`, `ing-homepay`, `kbc-online`, `klarnainvoice`, `paypal`,\
          \ `paysafecard`, `payulatam`, `przelewy24`, `qiwi-wallet`, `sdd`, `sisal`,\
          \ `sofort-uberweisung`, `yandex`, `aura`, `boleto-bancario`, `oxxo`"
        example:
        - visa
        - american-express
        explode: false
        in: query
        name: payment_product
        schema:
          items:
            enum:
            - visa
            - mastercard
            - maestro
            - cb
            - credit-card
            - 3xcb
            - 3xcb-no-fees
            - 4xcb
            - 4xcb-no-fees
            - american-express
            - bank-transfer
            - bcmc
            - bcmc-mobile
            - cbc-online
            - dexia-directnet
            - giropay
            - ideal
            - ing-homepay
            - kbc-online
            - klarnainvoice
            - paypal
            - paysafecard
            - payulatam
            - przelewy24
            - qiwi-wallet
            - sdd
            - sisal
            - sofort-uberweisung
            - yandex
            - aura
            - boleto-bancario
            - oxxo
            type: string
          type: array
      - description: "Available categories of payment products.\n                \
          \    \n- `credit-card`, `debit-card`, `realtime-banking`, `ewallet`"
        example:
        - credit-card
        explode: false
        in: query
        name: payment_product_category
        schema:
          items:
            enum:
            - credit-card
            - debit-card
            - realtime-banking
            - ewallet
            type: string
          type: array
      - description: The country code of the customer. This two-letter country code
          complies with ISO 3166-1 (alpha 2).
        example:
        - FR
        explode: false
        in: query
        name: customer_country
        schema:
          default:
          - FR
          items:
            enum:
            - AF
            - AL
            - DZ
            - AS
            - AD
            - AO
            - AI
            - AQ
            - AG
            - AR
            - AM
            - AW
            - AC
            - AU
            - AT
            - AZ
            - BS
            - BH
            - BD
            - BB
            - BY
            - BE
            - BZ
            - BJ
            - BM
            - BT
            - BO
            - BA
            - BW
            - BR
            - IO
            - VG
            - BN
            - BG
            - BF
            - BI
            - KH
            - CM
            - CA
            - IC
            - CV
            - BQ
            - KY
            - CF
            - EA
            - TD
            - CL
            - CN
            - CX
            - CC
            - CO
            - KM
            - CG
            - CD
            - CK
            - CR
            - HR
            - CU
            - CW
            - CY
            - CZ
            - CI
            - DK
            - DG
            - DJ
            - DM
            - DO
            - EC
            - EG
            - SV
            - GQ
            - ER
            - EE
            - ET
            - FK
            - FO
            - FJ
            - FI
            - FR
            - GF
            - PF
            - TF
            - GA
            - GM
            - GE
            - DE
            - GH
            - GI
            - GR
            - GL
            - GD
            - GP
            - GU
            - GT
            - GG
            - GN
            - GW
            - GY
            - HT
            - HN
            - HK
            - HU
            - IS
            - IN
            - ID
            - IR
            - IQ
            - IE
            - IM
            - IL
            - IT
            - JM
            - JP
            - JE
            - JO
            - KZ
            - KE
            - KI
            - XK
            - KW
            - KG
            - LA
            - LV
            - LB
            - LS
            - LR
            - LY
            - LI
            - LT
            - LU
            - MO
            - MK
            - MG
            - MW
            - MY
            - MV
            - ML
            - MT
            - MH
            - MQ
            - MR
            - MU
            - YT
            - MX
            - FM
            - MD
            - MC
            - MN
            - ME
            - MS
            - MA
            - MZ
            - MM
            - NA
            - NR
            - NP
            - NL
            - NC
            - NZ
            - NI
            - NE
            - NG
            - NU
            - NF
            - KP
            - MP
            - 'NO'
            - OM
            - PK
            - PW
            - PS
            - PA
            - PG
            - PY
            - PE
            - PH
            - PN
            - PL
            - PT
            - PR
            - QA
            - RO
            - RU
            - RW
            - RE
            - WS
            - SM
            - SA
            - SN
            - RS
            - SC
            - SL
            - SG
            - SX
            - SK
            - SI
            - SB
            - SO
            - ZA
            - GS
            - KR
            - SS
            - ES
            - LK
            - BL
            - SH
            - KN
            - LC
            - MF
            - PM
            - VC
            - SD
            - SR
            - SJ
            - SZ
            - SE
            - CH
            - SY
            - ST
            - TW
            - TJ
            - TZ
            - TH
            - TL
            - TG
            - TK
            - TO
            - TT
            - TA
            - TN
            - TR
            - TM
            - TC
            - TV
            - UM
            - VI
            - UG
            - UA
            - AE
            - GB
            - US
            - UY
            - UZ
            - VU
            - VA
            - VE
            - VN
            - WF
            - EH
            - YE
            - ZM
            - ZW
            - AX
            type: string
          type: array
      - description: Base currency for this order. This three-character currency code
          complies with ISO 4217.
        example:
        - EUR
        explode: false
        in: query
        name: currency
        schema:
          default:
          - EUR
          items:
            enum:
            - AFN
            - AFA
            - ALL
            - ALK
            - DZD
            - ADP
            - AOA
            - AOK
            - AON
            - AOR
            - ARA
            - ARS
            - ARM
            - ARP
            - ARL
            - AMD
            - AWG
            - AUD
            - ATS
            - AZN
            - AZM
            - BSD
            - BHD
            - BDT
            - BBD
            - BYN
            - BYB
            - BYR
            - BEF
            - BEC
            - BEL
            - BZD
            - BMD
            - BTN
            - BOB
            - BOL
            - BOV
            - BOP
            - BAM
            - BAD
            - BAN
            - BWP
            - BRC
            - BRZ
            - BRE
            - BRR
            - BRN
            - BRB
            - BRL
            - GBP
            - BND
            - BGL
            - BGN
            - BGO
            - BGM
            - BUK
            - BIF
            - XPF
            - KHR
            - CAD
            - CVE
            - KYD
            - XAF
            - CLE
            - CLP
            - CLF
            - CNX
            - CNY
            - CNH
            - COP
            - COU
            - KMF
            - CDF
            - CRC
            - HRD
            - HRK
            - CUC
            - CUP
            - CYP
            - CZK
            - CSK
            - DKK
            - DJF
            - DOP
            - NLG
            - XCD
            - DDM
            - ECS
            - ECV
            - EGP
            - GQE
            - ERN
            - EEK
            - ETB
            - EUR
            - XEU
            - FKP
            - FJD
            - FIM
            - FRF
            - XFO
            - XFU
            - GMD
            - GEK
            - GEL
            - DEM
            - GHS
            - GHC
            - GIP
            - GRD
            - GTQ
            - GWP
            - GNF
            - GNS
            - GYD
            - HTG
            - HNL
            - HKD
            - HUF
            - ISK
            - ISJ
            - INR
            - IDR
            - IRR
            - IQD
            - IEP
            - ILS
            - ILP
            - ILR
            - ITL
            - JMD
            - JPY
            - JOD
            - KZT
            - KES
            - KWD
            - KGS
            - LAK
            - LVL
            - LVR
            - LBP
            - LSL
            - LRD
            - LYD
            - LTL
            - LTT
            - LUL
            - LUC
            - LUF
            - MOP
            - MKD
            - MKN
            - MGA
            - MGF
            - MWK
            - MYR
            - MVR
            - MVP
            - MLF
            - MTL
            - MTP
            - MRU
            - MRO
            - MUR
            - MXV
            - MXN
            - MXP
            - MDC
            - MDL
            - MCF
            - MNT
            - MAD
            - MAF
            - MZE
            - MZN
            - MZM
            - MMK
            - NAD
            - NPR
            - ANG
            - TWD
            - NZD
            - NIO
            - NIC
            - NGN
            - KPW
            - NOK
            - OMR
            - PKR
            - PAB
            - PGK
            - PYG
            - PEI
            - PEN
            - PES
            - PHP
            - PLN
            - PLZ
            - PTE
            - GWE
            - QAR
            - XRE
            - RHD
            - RON
            - ROL
            - RUB
            - RUR
            - RWF
            - SVC
            - WST
            - SAR
            - RSD
            - CSD
            - SCR
            - SLL
            - SGD
            - SKK
            - SIT
            - SBD
            - SOS
            - ZAR
            - ZAL
            - KRH
            - KRW
            - KRO
            - SSP
            - SUR
            - ESP
            - ESA
            - ESB
            - LKR
            - SHP
            - SDD
            - SDG
            - SDP
            - SRD
            - SRG
            - SZL
            - SEK
            - CHF
            - SYP
            - STN
            - STD
            - TJR
            - TJS
            - TZS
            - THB
            - TPE
            - TOP
            - TTD
            - TND
            - TRY
            - TRL
            - TMT
            - TMM
            - USD
            - USN
            - USS
            - UGX
            - UGS
            - UAH
            - UAK
            - AED
            - UYU
            - UYP
            - UYI
            - UZS
            - VUV
            - VEF
            - VEB
            - VND
            - VNN
            - CHE
            - CHW
            - XOF
            - YDD
            - YER
            - YUN
            - YUD
            - YUM
            - YUR
            - ZRN
            - ZRZ
            - ZMW
            - ZMK
            - ZWD
            - ZWR
            - ZWL
            type: string
          type: array
      - in: query
        name: payment_terminal
        schema:
          items:
            type: integer
          type: array
      - in: query
        name: initialize_payment_terminal
        schema:
          format: int32
          type: integer
      - example:
        - 1
        explode: false
        in: query
        name: operation
        schema:
          default:
          - 4
          items:
            enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            type: integer
          type: array
      - in: query
        name: acquirer_registration_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hipay.Gateway.AvailablePaymentProductBundle.Response.AvailablePaymentProduct.AvailablePaymentProduct_PaymentProduct_'
          description: Payment products list successfully returned.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hipay.Gateway.CommonBundle.Response.CommonResponse'
          description: The request was rejected due to a validation error.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hipay.Gateway.CommonBundle.Response.CommonResponse'
          description: An authentication error occurred/invalid credentials.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hipay.Gateway.CommonBundle.Response.CommonResponse'
          description: Access to this resource is fordidden.
      security:
      - basicAuth: [
          ]
      summary: Get the list of all Payment product available by merchant
      tags:
      - payment-products
  /v2/security-settings:
    get:
      description: Returns the list of all hash algorithms.
      operationId: get_security-settings
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hipay.Gateway.SecuritySettingBundle.Response.SecuritySetting.SecuritySetting'
          description: Hash algorithm successfully returned
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hipay.Gateway.CommonBundle.Response.CommonResponse'
          description: The request was rejected due to a validation error.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hipay.Gateway.CommonBundle.Response.CommonResponse'
          description: An authentication error occurred/invalid credentials.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hipay.Gateway.CommonBundle.Response.CommonResponse'
          description: Access to this resource is fordidden.
      security:
      - basicAuth: [
          ]
      summary: Get the hash algorithm
      tags:
      - security-settings
components:
  schemas:
    Forward:
      title: Forward
      description: Forward
      properties:
        forwardUrl:
          description: ''
          type: string
          example: https://stage-secure-gateway.hipay-tpp.com/payment/web/pay/df4d20da-7b6f-4fed-8603-c4ed3dca48
        mid:
          description: ''
          type: string
          example: '00001326589'
        order:
          $ref: '#/components/schemas/OrderResponse'
      type: object
    hpayment:
      title: HPayment
      description: HPayment model
      required:
      - orderid
      - description
      - currency
      - amount
      properties:
        payment_product_list:
          description: |2-

             The list of payment products to display on the payment page.

            - `visa`, `mastercard`, `maestro`, `cb`, `3xcb`, `3xcb-no-fees`, `4xcb`, `4xcb-no-fees`, `american-express`, `bank-transfer`, `bcmc`, `bcmc-mobile`, `cbc-online`, `dexia-directnet`, `giropay`, `ideal`, `ing-homepay`, `kbc-online`, `klarnainvoice`, `paypal`, `paysafecard`, `payulatam`, `przelewy24`, `qiwi-wallet`, `sdd`, `sisal`, `sofort-uberweisung`, `yandex`, `aura`, `boleto-bancario`, `oxxo`, `itau`, `payshop`, `ukash`, `webmoney-transfer`, `elo-card`, `carte-cadeau`, `safetypay`, `skrill`, `bnpp-4xcb`, `bnpp-3xcb`, `discover`, `banco-do-brasil`, `bradesco`, `caixa`, `multibanco`, `cofinoga`, `hipercard`, `santander-home-banking`, `santander-cash`, `banamex`, `bbva-bancomer`, `credit-long`, `carte-titre-restaurant`, `alipay-ecommerce`, `divido`, `bacs`, `wechatpay`, `klarnacheckout`, `cup`, `bancontactqrcode`
          type: string
          example: mastercard,visa,american-express
          x-sort: 20
        payment_product_category_list:
          description: |2-

             The categories of payment products to be displayed on the payment page.

            - `credit-card`, `debit-card`, `realtime-banking`, `ewallet`, `prepaid-card`, `open-invoice`, `credit-consumption`
          type: string
          enum:
          - credit-card
          - debit-card
          - realtime-banking
          - ewallet
          - prepaid-card
          - open-invoice
          - credit-consumption
          example: credit-card
          additionalProperties:
            default: credit-card
          x-sort: 25
        css:
          description: URL to merchant style sheet. **HTTPS protocol is required.**
          type: string
          example: https://developer.hipay.com/misc/simulator/css-responsive.css
          x-sort: 30
        template:
          description: |-
            The template name. Possible values:
            - `basic-js` : Template with customizable CSS
            - `iframe-js` : Template with hosted iFrame integration
            - `autodetection` : Automatic detection of the brand of the card, if the merchant has the option
          type: string
          enum:
          - basic-js
          - iframe-js
          - autodetection
          - basic
          - iframe
          example: basic-js
          x-sort: 35
        merchant_display_name:
          description: The merchant name displayed on payment page, otherwise the
            name is retrieved from order.
          type: string
          example: ACME Consolidated
          x-sort: 40
        display_selector:
          description: |-
            Enable/disable the payment products selector. Possible values:
              - `0`: the selector is not displayed
              - `1`: the selector is displayed
          type: integer
          enum:
          - 0
          - 1
          example: '1'
          x-sort: 45
        time_limit_to_pay:
          description: 'The time limit to pay allows you to specify the validity period
            of a payment page in seconds starting from the moment the payment link
            (forwardUrl) is generated. If empty, default value is fixed to 7 days.
            Max value: 24 days (2140000 seconds).'
          type: string
          example: '1800'
          x-sort: 55
      type: object
      allOf:
      - $ref: '#/components/schemas/Common'
      - $ref: '#/components/schemas/Order'
    Maintenance:
      title: Maintenance
      description: Maintenance model
      required:
      - operation
      properties:
        operation:
          description: |-
            The operation to perform on the transaction.

            The payment gateway supports the following types of maintenance transactions.

            | Operation Type | Description |
            | --- | --- |
            | `capture` | A request instructing the payment gateway to capture a previously-authorized transaction, i.e. transfer the funds from the customer's bank account to the merchant's bank account. This transaction is always preceded by an authorization. |
            | `refund` | A request instructing the payment gateway to refund a previously captured transaction. A captured transaction can be partly or fully refunded. |
            | `cancel` | A request instructing the payment gateway to cancel a previously authorized transaction. Only authorized transactions can be cancelled, captured transactions must be refunded. |
            | `acceptChallenge` | A request instructing the payment gateway to accept a previously challenged transaction. |
            | `denyChallenge` | A request instructing the payment gateway to deny a previously challenged transaction. |
            | `finalize` | A request instructing the payment gateway to finalize an asynchronous operation. |
          type: string
          enum:
          - capture
          - refund
          - cancel
          - acceptChallenge
          - denyChallenge
          - finalize
          example: capture
        currency:
          description: Base currency for this order. This three-character currency
            code complies with ISO 4217.
          type: string
          enum:
          - FRF
          - SKK
          - EEK
          - TMT
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BRL
          - BSD
          - BTN
          - BWP
          - BYR
          - BZD
          - CAD
          - CDF
          - CHF
          - CLP
          - CNY
          - COP
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LVL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MUR
          - MVR
          - MWK
          - MXN
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SOS
          - SRD
          - STD
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - UYU
          - UZS
          - VEF
          - VND
          - VUV
          - TMM
          - WST
          - XAF
          - XCD
          - XOF
          - XPF
          - YER
          - ZAR
          - ZMK
          - ZWL
          example: EUR
          additionalProperties:
            default: EUR
        amount:
          description: Amount is required for partial maintenances. Do not specify
            amount for full captures or refunds.
          type: string
          example: '3.5'
        operation_id:
          description: Operation merchant ID. This value will be returned to merchant
            with the notifications related to this operation.
          type: string
          example: 204OJ23LKJ234
        basket:
          description: |-
            Shopping cart details. **You must send only items that must be captured or refunded.**

            Please refer to [HiPay Enterprise - Payment Gateway - Shopping cart managment](https://support.hipay.com/hc/fr/articles/115001660469-Payment-Gateway-Shopping-cart-management) technical documentation.
          type: string
        sub_transaction_reference:
          description: Number of the subtransaction to be refunded.
          type: string
          example: '134470136955'
        source:
          description: "To identify the origin of the transaction. Here are the authorized\
            \ values for source property: \n\n- `AUTO`, `SAPI`, `CONS`, `PAGE`, `TPE`,\
            \ `RTRY`, `MANU`, `PREF`, `REVI`, `CMS`, `SSDK`, `CSDK`"
          type: string
          example: '{"integration_version":"1.9.0","brand":"DEVPORTAL","source":"CSDK","brand_version":"12.2.0"}'
      type: object
    Operation:
      title: Operation
      description: Operation model
      properties:
        operation:
          description: The operation to perform on the transaction.
          type: string
          enum:
          - capture
          - refund
          - cancel
          - acceptChallenge
          - denyChallenge
          example: capture
          x-sort: 1
        mid:
          description: ''
          type: string
          example: '00001326589'
          x-sort: 5
        authorizationCode:
          description: ''
          type: string
          example: author
          x-sort: 10
        transactionReference:
          description: ''
          type: string
          example: '800000968431'
          x-sort: 15
        status:
          description: ''
          type: string
          example: '118'
          x-sort: 35
        message:
          description: ''
          type: string
          example: Captured
          x-sort: 40
        dateCreated:
          description: ''
          type: string
          example: 2019-02-07T10:07:09+0000
          x-sort: 20
        dateUpdated:
          description: ''
          type: string
          example: 2019-02-07T10:07:09+0000
          x-sort: 25
        dateAuthorized:
          description: ''
          type: string
          example: 2019-02-07T10:07:09+0000
          x-sort: 30
        authorizedAmount:
          description: ''
          type: string
          example: '125.85'
          x-sort: 45
        capturedAmount:
          description: ''
          type: string
          example: '125.85'
          x-sort: 50
        refundedAmount:
          description: ''
          type: string
          example: '0.00'
          x-sort: 55
        decimals:
          description: ''
          type: string
          example: '2'
          x-sort: 60
        currency:
          description: ''
          type: string
          example: EUR
          x-sort: 65
      type: object
    InputOrder:
      title: InputOrder
      description: InputOrder model
      required:
      - orderid
      - payment_product
      - description
      - currency
      - amount
      - cardtoken
      properties:
        payment_product:
          description: The payment method used to proceed checkout. Depending on the
            payment product, parameters specific to the payment method are required.
            The list of payment products to display on the payment page.
          type: string
          enum:
            - visa
            - mastercard
            - maestro
            - cb
            - 3xcb
            - 3xcb-no-fees
            - 4xcb
            - 4xcb-no-fees
            - american-express
            - bank-transfer
            - bcmc
            - bcmc-mobile
            - cbc-online
            - dexia-directnet
            - giropay
            - ideal
            - ing-homepay
            - kbc-online
            - klarnainvoice
            - paypal
            - paysafecard
            - payulatam
            - przelewy24
            - qiwi-wallet
            - sdd
            - sisal
            - sofort-uberweisung
            - yandex
            - aura
            - boleto-bancario
            - oxxo
            - itau
            - payshop
            - dankort
            - postepay
            - ukash
            - mercadopago
            - webmoney-transfer
            - diners
            - jcb
            - dcb-cz-tmobile
            - dcb-cz-o2
            - dcb-cz-vodafone
            - dcb-at-tmobile
            - dcb-at-a1
            - dcb-at-orange
            - dcb-at-drei
            - dcb-be-mobistar
            - dcb-ch-easypay
            - dcb-sg-singtel
            - dcb-it-mobilepay
            - sct
            - elo-card
            - dcb-be-proximus
            - postfinance-card
            - postfinance-efinance
            - carte-cadeau
            - mybank
            - safetypay
            - skrill
            - bnpp-4xcb
            - bnpp-3xcb
            - unionpay
            - alipay-pos
            - multi-payment
            - discover
            - sepa-refund-transfer
            - banco-do-brasil
            - bradesco
            - carte-accord
            - caixa
            - edankort
            - multibanco
            - dcb-es-pagosmovistar
            - cashu
            - moneybookers
            - afterpay
            - cofinoga
            - aurore
            - 1eurocom
            - hipercard
            - santander-home-banking
            - santander-cash
            - banamex
            - bbva-bancomer
            - ecarte-bleue
            - credit-long
            - carte-titre-restaurant
            - alipay-ecommerce
            - divido
            - bacs
            - tpe
            - wechatpay
            - klarnacheckout
            - sofort-lastschrift
            - sepa-direct-debit
            - cup
            - bancontactqrcode
          example: visa
          x-sort: 20
        browser_info:
          description: >-
            **This parameter is specific to the PSD2.**


            Browser Information

            <hr>
            <div class="parameter__description__object">
            <div class="parameter__name">java_enabled</div>
            <div class="parameter__type">boolean</div>
            <div class="parameter__description">


            Boolean that represents the ability of the cardholder browser to execute Java.

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">javascript_enabled</div>
            <div class="parameter__type">boolean</div>
            <div class="parameter__description">


            Boolean that represents the ability of the cardholder browser to execute JavaScript.

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">ipaddr</div>
            <div class="parameter__type">string</div>
            <div class="parameter__description">


            Customer's IP address.

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">http_accept</div>
            <div class="parameter__type">string</div>
            <div class="parameter__description">


            This element should contain the exact content of the HTTP Accept header as sent to the merchant from the customer's browser.

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">http_user_agent</div>
            <div class="parameter__type">string</div>
            <div class="parameter__description">


            This element should contain the exact content of the HTTP User-Agent header as sent to the merchant from the customer's browser.

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">language</div>
            <div class="parameter__type">string</div>
            <div class="parameter__description">


            Value representing the browser language as defined in IETF BCP47.

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">color_depth</div>
            <div class="parameter__type">string</div>
            <div class="parameter__description">


            Value representing the bit depth of the colour palette for displaying images, in bits per pixel.

            - `1` : 1 bit

            - `4` : 4 bits

            - `8` : 8 bits

            - `15` : 15 bits

            - `16` : 16 bits

            - `24` : 24 bits

            - `32` : 32 bits

            - `48` : 48 bits

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">screen_height</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Total height of the Cardholder’s screen in pixels.

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">screen_width</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Total width of the Cardholder’s screen in pixels.

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">timezone</div>
            <div class="parameter__type">string</div>
            <div class="parameter__description">


            Time-zone offset in minutes between UTC and the Cardholder.

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">device_fingerprint</div>
            <div class="parameter__type">string</div>
            <div class="parameter__description">


            This element should contain the value of the ioBB hidden field.

            </div>
            </div>
          type: object
          required:
            - language
          properties:
            java_enabled:
              description: >-
                Boolean that represents the ability of the cardholder browser to
                execute Java.
              type: boolean
              example: true
            javascript_enabled:
              description: >-
                Boolean that represents the ability of the cardholder browser to
                execute JavaScript.
              type: boolean
              example: true
            ipaddr:
              description: Customer's IP address.
              type: string
              maximum: 45
              example: 127.0.0.1
            http_accept:
              description: >-
                This element should contain the exact content of the HTTP Accept
                header as sent to the merchant from the customer's browser.
              type: string
              maximum: 2048
              example: '*/*'
            http_user_agent:
              description: >-
                This element should contain the exact content of the HTTP
                User-Agent header as sent to the merchant from the customer's
                browser.
              type: string
              maximum: 2048
              example: Mozilla/4.0
            language:
              description: >-
                Value representing the browser language as defined in IETF
                BCP47.
              type: string
              minimum: 1
              maximum: 8
              example: fr-FR
            color_depth:
              description: >-
                Value representing the bit depth of the colour palette for
                displaying images, in bits per pixel.
              type: integer
              minimum: 1
              maximum: 2
              enum:
                - 1
                - 4
                - 8
                - 15
                - 16
                - 24
                - 32
                - 48
              example: 1
            screen_height:
              description: Total height of the Cardholder’s screen in pixels.
              type: integer
              minimum: 1
              maximum: 6
            screen_width:
              description: Total width of the cardholder’s screen in pixels.
              type: integer
              minimum: 1
              maximum: 6
            timezone:
              description: >-
                Time-zone offset in minutes between UTC and the Cardholder
                browser local time.
              type: string
              example: -120
              minimum: 1
              maximum: 5
            device_fingerprint:
              description: This element should contain the value of the ioBB hidden field.
              type: string
              example: 042q0aAXOogFCkNMNf94lis1ztsdwpJAn3AFS6wesUIr2q
          x-sort: 360
      type: object
      allOf:
      - $ref: '#/components/schemas/Common'
      - $ref: '#/components/schemas/Order'
    Error:
      title: Error
      description: Error model
      properties:
        code:
          description: Code
          type: integer
        message:
          description: Message
          type: string
        description:
          description: Description
          type: string
      type: object
    TransactionDetail:
      title: Transaction detail
      description: Transaction detail
      properties:
        transaction:
          description: ''
          type: object
          allOf:
          - $ref: '#/components/schemas/Transaction'
      type: object
    Common:
      title: Common
      description: Common model
      properties:
        orderid:
          description: Unique order ID.
          type: string
          example: ORDER_1537532589263
          x-uniqId: true
          x-sort: 1
        operation:
          description: |-
            Transaction type:
            - `Sale` indicates that the transaction is automatically submitted for capture.
            - `Authorization` indicates that this transaction is sent for authorization only.
          type: string
          enum:
          - Authorization
          - Sale
          example: Authorization
          additionalProperties:
            default: Authorization
          x-sort: 5
        basket:
          description: |-
            Shopping cart details.

            Please refer to [HiPay Enterprise - Payment Gateway - Shopping cart managment](https://support.hipay.com/hc/fr/articles/115001660469-Payment-Gateway-Shopping-cart-management) technical documentation.
          type: string
          example: '[{"european_article_numbering":"4711892728946","product_reference":"NF-a1690","name":"My
            first product","type":"good","quantity":1,"unit_price":8.99,"discount":0,"tax_rate":"8.20","total_amount":8.99}]'
          x-sort: 69
        description:
          description: The order short description.
          type: string
          example: A super short description here...
          x-sort: 60
        long_description:
          description: Additional order description. You can show this description
            in HiPay payment page if desired.
          type: string
          example: A super long description here...
          x-sort: 65
        currency:
          description: Base currency for this order. This three-character currency
            code complies with ISO 4217.
          type: string
          enum:
          - FRF
          - SKK
          - EEK
          - TMT
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BRL
          - BSD
          - BTN
          - BWP
          - BYR
          - BZD
          - CAD
          - CDF
          - CHF
          - CLP
          - CNY
          - COP
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LVL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MUR
          - MVR
          - MWK
          - MXN
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SOS
          - SRD
          - STD
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - UYU
          - UZS
          - VEF
          - VND
          - VUV
          - TMM
          - WST
          - XAF
          - XCD
          - XOF
          - XPF
          - YER
          - ZAR
          - ZMK
          - ZWL
          example: EUR
          additionalProperties:
            default: EUR
          x-sort: 70
        amount:
          description: Total order amount, calculated as the sum of purchased items,
            plus shipping fees (if present), plus tax fees (if present).
          type: number
          minimum: 1
          example: 8.99
          x-sort: 75
        shipping:
          description: The order shipping fee. It can be omitted if the shipping fee
            value is zero.
          type: number
          example: 1.3
          x-sort: 80
        tax:
          description: The order tax fee. It can be omitted if the order tax value
            is zero.
          type: number
          example: 1.1
          x-sort: 85
        tax_rate:
          description: The order tax rate.
          type: number
          example: 1
          x-sort: 90
        cid:
          description: Merchant's customer id. For fraud detection reasons.
          type: string
          example: '283749291'
          x-sort: 95
        ipaddr:
          description: The IP address of your customer making a purchase.
          type: string
          example: 127.0.0.1
          x-sort: 100
        accept_url:
          description: |2-

            The URL to return your customer to once the payment process is
            completed successfully.

            For more information about the user
            redirection workflow, check the [HiPay Enterprise
            Overview](/getting-started/platform-hipay-enterprise/overview/#redirect-pages).
          type: string
          example: https://developer.hipay.com/simulator/success/
          x-sort: 105
        decline_url:
          description: "\nThe URL to return your customer to after the acquirer declines\
            \ the\npayment.\n\nFor more information about the user redirection\nworkflow,\
            \ check the [HiPay Enterprise\nOverview](/getting-started/platform-hipay-enterprise/overview/#redirect-pages). "
          type: string
          example: https://developer.hipay.com/simulator/decline/
          x-sort: 110
        pending_url:
          description: |2-

            The URL to return your customer to when the payment request was
            submitted to the acquirer but response is not yet available.

            For more information about the user redirection workflow, check the
            [HiPay Enterprise
            Overview](/getting-started/platform-hipay-enterprise/overview/#redirect-pages).
          type: string
          example: https://developer.hipay.com/simulator/pending/
          x-sort: 115
        exception_url:
          description: |2-

            The URL to return your customer to after a system failure.

            For more information about the user redirection workflow, check the
            [HiPay Enterprise
            Overview](/getting-started/platform-hipay-enterprise/overview/#redirect-pages).
          type: string
          example: https://developer.hipay.com/simulator/exception/
          x-sort: 120
        cancel_url:
          description: |2-

            The URL to return your customer to after a system failure.

            For more information about the user redirection workflow, check the
            [HiPay Enterprise
            Overview](/getting-started/platform-hipay-enterprise/overview/#redirect-pages).
          type: string
          example: https://developer.hipay.com/simulator/cancel/
          x-sort: 125
        notify_url:
          description: This field allows you to override the notification URL, available
            in the configuration in the HiPay back office, with the URL of your choice
            that will process the notification sent by the HiPay platform.
          type: string
          example: https://developer.hipay.com/simulator/notify/
          x-sort: 130
        http_accept:
          description: This element should contain the exact content of the HTTP Accept
            header as sent to the merchant from the customer's browser.
          type: string
          example: '*\/*'
          x-sort: 135
        http_user_agent:
          description: This element should contain the exact content of the HTTP User-Agent
            header as sent to the merchant from the customer's browser.
          type: string
          example: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)
          x-sort: 140
        language:
          description: Locale code of your customer. This will be used to display
            payment page in correct language.
          type: string
          example: en_GB
          x-sort: 150
        custom_data:
          description: Custom data. You can use these parameters to submit custom
            values you wish to show in HiPay back office transaction details, receive
            back in the API response messages, in the notifications or to activate
            specific FPS rules. Please note that cdata have been deprecated. If you
            are still using them, they can’t be combined with custom data. We thus
            recommend migrating to custom data as soon as possible.
          type: string
          example: '{"internal_reference":"ORD_987465","customer_first_order":true,"other_sample_parameter":"Other
            sample value"}'
          x-sort: 155
        eci:
          description: |2-

             **This parameter is specific to SEPA Direct Debit as well as credit
            or debit card payment products.**

            Electronic Commerce Indicator (ECI).

            The ECI indicates the security level at which the payment information is processed between the cardholder and merchant.

            ### Credit or debit card

            If the payment product is a credit or debit card:

            - `1`: MO/TO (Mail Order/Telephone Order)
            - `2`: MO/TO – Recurring
            - `7`: E-commerce with SSL/TLS Encryption
            - `9`: Recurring E-commerce
            - `10`: TPE payment

            A default ECI value can be set in the preferences page. An ECI value sent along in the transaction will overwrite the default ECI value.

            ### SEPA Direct Debit

            If the payment product is SEPA Direct Debit:
            - `7`: First transaction/one-shot transaction
            - `9`: Recurring transaction
          type: string
          enum:
          - '1'
          - '2'
          - '7'
          - '9'
          - '10'
          example: '9'
          additionalProperties:
            default: '7'
          x-sort: 10
        authentication_indicator:
          description: |2-

            **This parameter is specific to SEPA Direct Debit as well as credit or debit card payment products.**

            ### Credit or debit card

            If the payment product is a credit or debit card, this parameter indicates if the 3-D Secure authentication should be performed for this transaction.

            - `0`: Bypass 3-D Secure authentication.

            - `1`: 3-D Secure authentication if available.

            - `2`: 3-D Secure authentication mandatory.

            For more information about the 3-D Secure workflow, check the [HiPay Enterprise Overview](/getting-started/platform-hipay-enterprise/overview/#3-d-secure-integration).

            ### SEPA Direct Debit

            If the payment product is SEPA Direct Debit, this parameter indicates if the debit agreement (mandate) must be electronically signed or not.

            - `0`: Bypass electronic signature.

            - `1`: Ask for electronic signature.

            For more information about the SEPA Direct Debit integration (including examples), check the [HiPay Enterprise Overview](/getting-started/platform-hipay-enterprise/overview/#sepa-direct-debit-sdd).
          type: string
          enum:
          - '0'
          - '1'
          - '2'
          example: '0'
          additionalProperties:
            default: '0'
          x-sort: 15
        expiration_limit:
          description: |-
            **This parameter is specific to provider COMPRAFACIL.**

            Validity period of the payment code in days.
          type: integer
          example: '3'
          x-sort: 206
        payment_connectivity:
          description: |-
            **This parameter is specific to providers QIWIWALLET and DIMOCO.**

            Origin of payment.
          type: string
          example: web
          x-sort: 206
        phone_operator:
          description: |-
            **This parameter is specific to providers DIMOCO and SINGTEL.**

            Name of the mobile operator.
          type: string
          example: FASTWEB
          x-sort: 206
        prepaid_card_number:
          description: |-
            **This parameter is specific to provider ONEY (Gift Card).**

            Gift Card number.
          type: string
          x-sort: 206
        prepaid_card_security_code:
          description: |-
            **This parameter is specific to provider ONEY (Gift Card).**

            Gift Card CVC.
          type: string
          x-sort: 206
        website_id:
          description: |-
            **This parameter is specific to providers PAGOSMOVISTAR and MOBILEPAY, only into the discover.**

            Website identifier.
          type: string
          example: STWAK4897048
          x-sort: 206
      type: object
    Order:
      title: Order
      description: Order model
      properties:
        email:
          description: The customer's e-mail address.
          type: string
          example: john.doe@foobar99.com
          x-sort: 210
        national_identification_number:
          description: |2-

            **This parameter is specific to Astropay payment methods.**

            Customer’s personal identification number.
          type: string
          example: AA 01 23 44 B
          x-sort: 217
        phone:
          description: The customer's phone number.
          type: string
          example: '33012345678'
          x-sort: 215
        msisdn:
          description: |2-

            **This parameter is specific to the 3x and 4x Carte Bancaire payment products.**

            The customer's ship-to mobile phone number.
          type: string
          example: '33612345678'
          x-sort: 216
        birthdate:
          description: Birth date of the customer (YYYYMMDD). For fraud detection
            reasons.
          type: string
          example: '19880612'
          x-sort: 220
        gender:
          description: |-
            Gender of the customer:

            - `M`: male
            - `F`: female
            - `U`: unknown
          type: string
          enum:
          - U
          - F
          - M
          example: U
          x-sort: 225
        firstname:
          description: The customer's first name. This value will be use to pre-fill
            cardholder name on credit card payment form.
          type: string
          example: Cathy
          x-sort: 230
        lastname:
          description: The customer's last name. This value will be use to pre-fill
            cardholder name on credit card payment form.
          type: string
          example: Doe
          x-sort: 235
        card_holder:
          description: |-

            The customer's card holder.
          type: string
          example: Cathy Doe
          x-sort: 236
        recipientinfo:
          description: Additional information about the customer (e.g., quality or
            function, company name, department, etc.).
          type: string
          example: Dr.
          x-sort: 240
        house_extension:
          description: House extension of the customer.
          type: string
          example: B
          x-sort: 243
        house_number:
          description: House number of the customer.
          type: string
          example: '101'
          x-sort: 244
        streetaddress:
          description: Street address of the customer.
          type: string
          example: 101 Rue de Rivoli
          x-sort: 245
        streetaddress2:
          description: Additional address information of the customer (e.g., building,
            floor, flat, etc.).
          type: string
          example: Immeuble B
          x-sort: 250
        city:
          description: The customer's city.
          type: string
          example: Paris
          x-sort: 255
        state:
          description: The USA state or the Canada state of the customer making the
            purchase. Send this information only if the address country of the customer
            is US (USA) or CA (Canada).
          type: string
          x-sort: 260
        zipcode:
          description: The zip or postal code of the customer.
          type: string
          example: '75001'
          x-sort: 265
        country:
          description: The zip or postal code of the customer.
          type: string
          example: FR
          x-sort: 270
        shipto_firstname:
          description: The first name of the order recipient.
          type: string
          example: Cathy
          x-sort: 285
        shipto_lastname:
          description: The last name of the order recipient.
          type: string
          example: Doe
          x-sort: 290
        shipto_recipientinfo:
          description: Additional information about the order recipient (e.g., quality
            or function, company name, department, etc.).
          type: string
          example: Dr.
          x-sort: 295
        shipto_house_number:
          description: House number of the recipient.
          type: string
          example: '101'
          x-sort: 299
        shipto_streetaddress:
          description: Street address to which the order is to be shipped.
          type: string
          example: 101 Rue de Rivoli
          x-sort: 300
        shipto_streetaddress2:
          description: The additional information about address to which the order
            is to be shipped (e.g., building, floor, flat, etc.).
          type: string
          example: Immeuble B
          x-sort: 305
        shipto_city:
          description: The city to which the order is to be shipped.
          type: string
          example: Paris
          x-sort: 310
        shipto_state:
          description: The USA state or Canada state to which the order is being shipped.
            Send this information only if the shipping country is US (USA) or CA (Canada).
          type: string
          x-sort: 315
        shipto_zipcode:
          description: The zip or postal code to which the order is being shipped.
          type: string
          example: '75001'
          x-sort: 320
        shipto_country:
          description: Country code to which the order is being shipped. This two-letter
            country code complies with ISO 3166-1 (alpha 2).
          type: string
          example: FR
          x-sort: 325
        device_fingerprint:
          description: |-
            This element should contain the value of the 'ioBB' hidden field.

            For more information about the device fingerprint integration, check the [HiPay Enterprise Overview](/getting-started/platform-hipay-enterprise/overview/#device-fingerprint-integration).
          type: string
          example: 042q0aAXOogFCkNMNf94lis1ztsdwpJAn3AFS6wesUIr2q
          x-sort: 145
        source:
          description: "To identify the origin of the transaction. Here are the authorized\
            \ values for source property: \n\n- `AUTO`, `SAPI`, `CONS`, `PAGE`, `TPE`,\
            \ `RTRY`, `MANU`, `PREF`, `REVI`, `CMS`, `SSDK`, `CSDK`"
          type: string
          example: '{"integration_version":"1.9.0","brand":"DEVPORTAL","source":"CSDK","brand_version":"12.2.0"}'
          x-sort: 146
        issuer_bank_id:
          description: |-
            **This parameter is specific to the iDEAL and the SEPA Direct Debit payment products.**

            This is the Business Identifier Code (BIC) of the customer's issuer bank.
          type: string
          example: BNPAFRPPXXX
          x-sort: 165
        qiwiuser:
          description: |2-

            **This parameter is specific to the Qiwi Wallet payment product.**

            The Qiwi user's ID, whom the invoice is issued to. It is the user's phone number, in international format.
          type: string
          example: '33670985712'
          x-sort: 170
        shipto_gender:
          description: |2-

            **This parameter is specific to the 3x and 4x Carte Bancaire payment products.**

            Gender of the recipient:

            - `M`: male
            - `F`: female
            - `U`: unknown
          type: string
          example: U
          x-sort: 280
        shipto_phone:
          description: |2-

            **This parameter is specific to the 3x and 4x Carte Bancaire payment products.**

            The recipient's ship-to phone number.
          type: string
          example: '33112345678'
          x-sort: 275
        shipto_msisdn:
          description: |2-

            **This parameter is specific to the 3x and 4x Carte Bancaire payment products.**

            The recipient's ship-to mobile phone number.
          type: string
          example: '3362345678'
          x-sort: 276
        order_category_code:
          description: |2-

            **This parameter is specific to the 3x and 4x Carte Bancaire payment products.**

            The order category code.

            Please refer to the following list:

            | Code | Description |
            | --- | --- |
            | 5499 | Alimentation & gastronomie
            | 5571 | Auto & moto
            | 7929 | Culture & divertissements
            | 5261 | Maison & jardin
            | 5200 | Electroménager
            | 7278 | Enchères et achats groupés
            | 5193 | Fleurs & cadeaux
            | 5734 | Informatique & logiciels
            | 7298 | Santé & beauté
            | 0 | Services aux particuliers
            | 7361 | Services aux professionnels
            | 5941 | Sport
            | 5651 | Vêtements & accessoires
            | 4722 | Voyage & tourisme
            | 5946 | Hifi, photo & vidéos
            | 4812 | Téléphonie & communication
          type: integer
          enum:
          - '5499'
          - '5571'
          - '7929'
          - '5261'
          - '5200'
          - '7278'
          - '5193'
          - '5734'
          - '7298'
          - '0'
          - '7361'
          - '5941'
          - '5651'
          - '4722'
          - '5946'
          - '4812'
          example: '5941'
          x-sort: 175
        delivery_date:
          description: |2-

            **This parameter is specific to the 3x and 4x Carte Bancaire payment products.**

            Estimated delivery date. Format is YYYY-MM-DD.
          type: string
          example: '2022-12-20'
          x-sort: 180
        delivery_method:
          description: |2-

            **This parameter is specific to the 3x and 4x Carte Bancaire payment products.**`

            The delivery method.
          type: string
          enum:
          - EXPRESS24H
          - EXPRESS48H
          - STORE
          - STORE24H
          - CARRIER
          - CARRIER24H
          - RELAYPOINT
          - RELAYPOINT24H
          example: CARRIER
          x-sort: 185
        carrier_description:
          description: |2-

            **This parameter is specific to the 3x and 4x Carte Bancaire payment products.**

            Carrier description.
          type: string
          example: La Poste, 27 Rue des Francs Bourgeois
          x-sort: 190
        recurring_payment:
          description: |2-

            **This parameter is specific to the SEPA Direct Debit payment product.**

            Indicates if the debit agreement will be created for a single-use or a multi-use.

            Possible values:

            - `0`: Generate a single-use agreement id.
            - `1`: Generate a multi-use agreement id.
          type: string
          enum:
          - '0'
          - '1'
          example: '0'
          additionalProperties:
            default: '0'
          x-sort: 195
        iban:
          description: |2-

            **This parameter is specific to the SEPA Direct Debit payment product.**

            International Bank Account Number (IBAN).
          type: string
          example: FR1420041010050500013M02606
          x-sort: 200
        bank_name:
          description: |2-

            **This parameter is specific to the SEPA Direct Debit payment product.**

            Issuer Bank Name.
          type: string
          example: BNP
          x-sort: 205
        sales_channel:
          description: |-
            Sales channel :

            - `0`: Default.
            - `1`: Ecommerce API.
            - `2`: Hosted Payment Page.
            - `3`: POS.
          type: string
          enum:
          - '0'
          - '1'
          - '2'
          - '3'
          example: ''
          x-sort: 205
        soft_descriptor:
          description: Billing descriptor for machine learning.
          type: string
          example: Dell Inspiron 15 3583 (i3583-3112BLK-PFR)
          x-sort: 205
        cardtoken:
          description: |2-

            **This parameter is specific to credit or debit card payment products.**

            This is the token obtained from the HiPay Enterprise Secure Vault API when tokenizing a credit or debit card. To generate a token, please refer to the [HiPay Enterprise Tokenization API documentation](/doc-api/enterprise/token/#/tokenization/createToken).
          type: string
          example: ef3b4d50325268e59d216c0b053a4f5c7eb559f9abeca0ef178ea1941b2d156a
          x-sort: 160
        request_id:
          description: The request ID linked to the token.
          type: integer
          example: '2078323'
          x-sort: 161
        previous_auth_info:
          description: >-
            **This parameter is specific to the PSD2.**


            Information about the previous authentication transaction on the
            merchant's side.

            <hr>
            <div class="parameter__description__object">
            <div class="parameter__name">transaction_reference</div>
            <div class="parameter__type">string</div>
            <div class="parameter__description">

            PSP reference about the previous authenticated transaction.

            </div>
            </div>
          type: object
          properties:
            transaction_reference:
              description: PSP reference about the previous authenticated transaction.
              type: string
              example: '800000987283'
          x-sort: 330
        merchant_risk_statement:
          description: >-
            **This parameter is specific to the PSD2.**


            Merchant's statement about the transaction he wants to proceed.

            <hr>
            <div class="parameter__description__object">
            <div class="parameter__name">email_delivery_address</div>
            <div class="parameter__type">string</div>
            <div class="parameter__description">


            Email address to which the goods needs to be sent to.

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">delivery_time_frame</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Indicates when the goods are willing to be received by the customer.

            - `1` : ELECTRONIC DELIVERY

            - `2` : SAME DAY SHIPPING

            - `3` : OVERNIGHT SHIPPING

            - `4` : TWO DAY OR MORE SHIPPING

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">purchase_indicator</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Availabilty of the goods.

            - `1` : MERCHANDISE AVAILABLE

            - `2` : FUTURE AVAILABILITY

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">pre_order_date</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            For a pre-ordered purchase, the expected date that the merchandise will be available.

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">reorder_indicator</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Unicity of the order for the customer.

            - `1` : FIRST TIME ORDERED

            - `2` : REORDERED

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">shipping_indicator</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Address to whom the goods are to be sent.

            - `1` : SHIP TO CARDHOLDER'S BILLING ADDRESS

            - `2` : SHIP TO ANOTHER VERIFIED ADDRESS ON FILE WITH MERCHANT

            - `3` : SHIP TO ADDRESS THAT IS DIFFERENT THAN THE CARDHOLDER'S BILLING ADDRESS

            - `4` : SHIP TO STORE / PICK UP AT LOCAL STORE

            - `5` : DIGITAL GOODS

            - `6` : TRAVEL AND EVENT TICKETS, NOT SHIPPED

            - `7` : OTHER (Gaming, digital services not shipped, emedia subscriptions

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">gift_card</div>
            <div class="parameter__type">object</div>
            <div class="parameter__description">


            Information on order making throught a gift card.

            <hr>
            <div class="parameter__description__object">
            <div class="parameter__name">amount</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Amount of the gift card.

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">count</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Total count of individual gift cards purchased.

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">currency</div>
            <div class="parameter__type">string</div>
            <div class="parameter__description">


            Currency of the gift card.

            </div>
            </div>
            </div>
            </div>
          type: object
          properties:
            email_delivery_address:
              description: Email address to which the goods needs to be sent to.
              type: string
              maximum: 254
              example: jane.doe@test.com
            delivery_time_frame:
              description: >-
                Indicates when the goods are willing to be received by the
                customer.
              type: integer
              enum:
                - 1
                - 2
                - 3
                - 4
              example: 1
            purchase_indicator:
              description: Availabilty of the goods.
              type: integer
              enum:
                - 1
                - 2
              example: 1
            pre_order_date:
              description: >-
                For a pre-ordered purchase, the expected date that the
                merchandise will be available.
              type: integer
              maximum: 8
              example: 20190925
            reorder_indicator:
              description: Unicity of the order for the customer.
              type: integer
              enum:
                - 1
                - 2
              example: 1
            shipping_indicator:
              description: Address to whom the goods are to be sent.
              type: integer
              enum:
                - 1
                - 2
                - 3
                - 4
                - 5
                - 6
                - 7
              example: 1
            gift_card:
              description: Information on order making throught a gift card.
              type: object
              properties:
                amount:
                  description: Amount of the gift card.
                  type: number
                  example: 15
                count:
                  description: Total count of individual gift cards purchased.
                  type: integer
                  example: 0
                currency:
                  description: Currency of the gift card.
                  type: string
                  example: EUR
          x-sort: 335
        account_info:
          description: >-
            **This parameter is specific to the PSD2.**


            Information about the customer's account on the merchant's website.

            <hr>
            <div class="parameter__description__object">
            <div class="parameter__name">customer</div>
            <div class="parameter__type">object</div>
            <div class="parameter__description">


            Customer's account information

            <hr>
            <div class="parameter__description__object">
            <div class="parameter__name">account_change</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Customer's last change on his account. (YYYYMMDD)

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">opening_account_date</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Date when the customer created his account
            on the merchant's website. (YYYYMMDD)

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">password_change</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Date when the customer made a password change on
            his account. (YYYYMMDD)

            </div>
            </div>
            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">purchase</div>
            <div class="parameter__type">object</div>
            <div class="parameter__description">


            Customer's purchase information

            <hr>
            <div class="parameter__description__object">
            <div class="parameter__name">count</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Number of purchases with the customer's account during the
            last six months.

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">card_stored_24h</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Number of attempts to add a card into the
            customer's account in the last 24 hours.

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">payment_attempts_24h</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Number of transactions (successful and
            abandoned) for this customer's account across all payment accounts
            in the previous 24 hours.

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">payment_attempts_1y</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Number of transactions (successful and
            abandoned) for this customer's account across all payment accounts
            in the previous year.

            </div>
            </div>
            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">payment</div>
            <div class="parameter__type">object</div>
            <div class="parameter__description">


            Customer's payment information

            <hr>
            <div class="parameter__description__object">
            <div class="parameter__name">enrollment_date</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Date that the payment account was enrolled in the
            cardholder’s account with the 3DS Requestor.(YYYYMMDD)

            </div>
            </div>
            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">shipping</div>
            <div class="parameter__type">object</div>
            <div class="parameter__description">


            Customer's shipping information

            <hr>
            <div class="parameter__description__object">
            <div class="parameter__name">shipping_used_date</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Date when the shipping address used for this
            transaction was first used. (YYYYMMDD)

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">address_usage_duration</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Indicates when the shipping address used
            for this transaction was first used with the merchant.

            - `1` : THIS TRANSACTION

            - `2` : LESS THAN 30 DAYS

            - `3` : 30-60 DAYS

            - `4` : MORE THAN 60 DAYS

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">name_indicator</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Indicates if the Cardholder Name on the account is
            identical to the shipping Name used for this transaction.

            - `1` : Account Name Identical to Shipping Name

            - `2` : Account Name different than shipping Name

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">suspicious_activity</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Indicates whether the merchant has
            experienced suspicious activity (including previous fraud) on the
            cardholder account.

            - `1` : No suspicious activity has been observed

            - `2` : Suspicious activity has been observed

            </div>
            </div>
            </div>
            </div>
          type: object
          properties:
            customer:
              description: Customer's account information
              type: object
              properties:
                account_change:
                  description: Customer's last change on his account. (YYYYMMDD)
                  type: integer
                  example: 20180507
                opening_account_date:
                  description: >-
                    Date when the customer created his account on the merchant's
                    website. (YYYYMMDD)
                  type: integer
                  example: 20180507
                password_change:
                  description: >-
                    Date when the customer made a password change on his account.
                    (YYYYMMDD)
                  type: integer
                  example: 20180507
            purchase:
              description: Customer's purchase information
              type: object
              properties:
                count:
                  description: >-
                    Number of purchases with the customer's account during the
                    last six months.
                  type: integer
                  maximum: 4
                  example: 2
                card_stored_24h:
                  description: >-
                    Number of attempts to add a card into the customer's account
                    in the last 24 hours.
                  type: integer
                  maximum: 3
                  example: 0
                payment_attempts_24h:
                  description: >-
                    Number of transactions (successful and abandoned) for this
                    customer's account across all payment accounts in the
                    previous 24 hours.
                  type: integer
                  maximum: 3
                  example: 0
                payment_attempts_1y:
                  description: >-
                    Number of transactions (successful and abandoned) for this
                    customer's account across all payment accounts in the
                    previous year.
                  type: integer
                  maximum: 3
                  example: 0
            payment:
              description: Customer's payment information
              type: object
              properties:
                enrollment_date:
                  description: >-
                    Date that the payment account was enrolled in the
                    cardholder’s account with the 3DS Requestor.(YYYYMMDD)
                  type: integer
                  example: 20180507
            shipping:
              description: Customer's shipping information
              type: object
              properties:
                shipping_used_date:
                  description: >-
                    Date when the shipping address used for this transaction was
                    first used. (YYYYMMDD)
                  type: integer
                  example: 20180507
                address_usage_duration:
                  description: >-
                    Indicates when the shipping address used for this
                    transaction was first used with the merchant.
                  type: integer
                  enum:
                    - 1
                    - 2
                    - 3
                    - 4
                  example: 1
                name_indicator:
                  description: >-
                    Indicates if the Cardholder Name on the account is identical
                    to the shipping Name used for this transaction.
                  type: integer
                  enum:
                    - 1
                    - 2
                  example: 1
                suspicious_activity:
                  description: >-
                    Indicates whether the merchant has experienced suspicious
                    activity (including previous fraud) on the cardholder
                    account.
                  type: integer
                  enum:
                    - 1
                    - 2
                  example: 1
          x-sort: 340
        device_channel:
          description: >-
            **This parameter is specific to the PSD2.**


            Channel through which the transaction is being processed. By default
            this value is set to 2.

            - `1` : App-based (APP)

            - `2` : Browser (BRW)"

            - `3` : 3DS Requestor Initiated (3RI)
          type: integer
          enum:
            - 1
            - 2
            - 3
          example: 1
          x-sort: 345
        recurring_info:
          description: >-
            **This parameter is specific to the PSD2.**


            Information on recurring transaction

            <hr>
            <div class="parameter__description__object">
            <div class="parameter__name">expiration_date</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Date after which no further authorisations shall
            be performed. (YYYYMMDD)

            </div>
            </div>
            <div class="parameter__description__object">
            <div class="parameter__name">frequency</div>
            <div class="parameter__type">integer</div>
            <div class="parameter__description">


            Indicates the minimum number of days between
            authorisations.

            </div>
            </div>
          type: object
          required:
            - expiration_date
            - frequency
          properties:
            expiration_date:
              description: >-
                Date after which no further authorisations shall be performed.
                (YYYYMMDD)
              type: integer
              example: 20180507
            frequency:
              description: Indicates the minimum number of days between authorisations.
              type: integer
              example: 31
          x-sort: 350
        exemption:
          description: >-
            **This parameter is specific to the PSD2.**


            If you have further questions on exemption, please contact Hipay.
          type: object
          x-sort: 355
      type: object
    OrderResponse:
      title: Order Response
      description: Order Response model
      properties:
        id:
          description: ''
          type: string
          example: '1549547828947'
        dateCreated:
          description: ''
          type: string
          example: 2019-02-07T13:57:08+0000
        attempts:
          description: ''
          type: string
          example: '0'
        amount:
          description: ''
          type: string
          example: '125.75'
        shipping:
          description: ''
          type: string
          example: '0'
        tax:
          description: ''
          type: string
          example: '1.10'
        decimals:
          description: ''
          type: string
          example: '2'
        currency:
          description: ''
          type: string
          example: EUR
        customerId:
          description: ''
          type: string
          example: '283749291'
        language:
          description: ''
          type: string
          example: en_GB
        email:
          description: ''
          type: string
          example: john.doe@foobar99.com
      type: object
    debitAgreement:
      title: Debit Agreement
      description: Debit Agreement model
      properties:
        id:
          type: string
        status:
          type: string
      type: object
    paymentMethod:
      title: Payment
      description: Payment model
      properties:
        token:
          description: ''
          type: string
        brand:
          description: ''
          type: string
        pan:
          description: ''
          type: string
        cardHolder:
          description: ''
          type: string
          example: JOHN DOE
        cardExpiryMonth:
          description: ''
          type: string
          example: '03'
        cardExpiryYear:
          description: ''
          type: string
          example: '2020'
        issuer:
          description: |-
            Name of the financial institution that
            issued the payment method.
          type: string
        country:
          description: The country code where payment method was issued.
          type: string
          example: US
      type: object
    Transaction:
      title: Transaction
      description: Transaction model
      properties:
        order:
          description: Represents a payment transaction.
          type: object
          allOf:
          - $ref: '#/components/schemas/OrderResponse'
          x-sort: 140
        authorizationCode:
          description: ''
          type: string
          example: author
          x-sort: 25
        dateCreated:
          description: ''
          type: string
          example: 2019-02-07T10:07:09+0000
          x-sort: 35
        dateAuthorized:
          description: ''
          type: string
          example: 2019-02-07T10:07:09+0000
          x-sort: 45
        authorizedAmount:
          description: ''
          type: string
          example: '125.85'
          x-sort: 60
        decimals:
          description: ''
          type: string
          example: '2'
          x-sort: 80
        currency:
          description: ''
          type: string
          example: EUR
          x-sort: 85
        ipAddress:
          description: ''
          type: string
          example: 0.0.0.0
          x-sort: 90
        ipCountry:
          description: ''
          type: string
          example: 0.0.0.0
          x-sort: 95
        avsResult:
          description: ''
          type: string
          x-sort: 105
        cvcResult:
          description: ''
          type: string
          x-sort: 110
        threeDSecure:
          description: Represents a payment transaction.
          type: object
          allOf:
          - $ref: '#/components/schemas/ThreeDSecure'
          x-sort: 130
        transactionReference:
          description: Unique Transaction Identifier.
          type: string
          example: '800000790677'
          x-sort: 30
        attemptId:
          description: Attempt identifier.
          type: integer
          example: '1'
          x-sort: 20
        dateUpdated:
          description: |-
            Date of last status change.

            This date must comply with ISO 8601.
          type: string
          x-sort: 40
        state:
          description: Transaction state.
          type: string
          example: completed
          x-sort: 1
        mid:
          description: |-
            Merchant id (MID).

            Unique identifier assigned to the merchant.
          type: integer
          x-sort: 15
        capturedAmount:
          description: Captured amount.
          type: string
          example: '125.75'
          x-sort: 65
        refundedAmount:
          description: Refunded amount.
          type: string
          example: '00.00'
          x-sort: 70
        creditedAmount:
          description: Total credited.
          type: string
          x-sort: 75
        paymentProduct:
          description: The payment product used for processing current transaction.
          type: string
          example: visa
          x-sort: 120
        paymentMethod:
          description: The payment method used for processing current transaction.
          type: object
          allOf:
          - $ref: '#/components/schemas/paymentMethod'
          x-sort: 125
        status:
          description: Transaction status.
          type: integer
          example: '116'
          x-sort: 50
        reason:
          description: The numeric value of the error.
          type: object
          allOf:
          - $ref: '#/components/schemas/reason'
          x-sort: 5
        forwardUrl:
          description: URL of the page on which to redirect the customer.
          type: string
          x-sort: 10
        deviceId:
          description: ''
          type: string
          x-sort: 100
        fraudScreening:
          description: Fraud screening result.
          type: object
          allOf:
          - $ref: '#/components/schemas/fraud'
          x-sort: 135
        eci:
          description: |-
            Electronic Commerce Indicator (ECI).

            The Electronic Commerce Indicator (ECI) is used by acquirers/issuers
            to determine the type of transaction being processed. The ECI value
            should represent the source of the transaction request. That is, the
            environment that the cardholder used to provide the payment card details
            to the merchant. It is important that merchants set the correct ECI
            value during transaction processing to ensure that appropriate merchant
            service rates are received.
          type: integer
          example: '7'
          x-sort: 115
        debitAgreement:
          type: object
          allOf:
          - $ref: '#/components/schemas/debitAgreement'
          x-sort: 145
        message:
          type: string
          x-sort: 55
      type: object
    ThreeDSecure:
      title: ThreeDSecure
      description: ThreeDSecure model
      properties:
        eci:
          description: ''
          type: string
          example: '6'
        enrollmentStatus:
          description: ''
          type: string
          example: N
        enrollmentMessage:
          description: ''
          type: string
          example: Cardholder Not Enrolled
        authenticationStatus:
          description: ''
          type: string
          example: ''
        authenticationMessage:
          description: ''
          type: string
          example: ''
        authenticationToken:
          description: ''
          type: string
          example: ''
        xid:
          description: ''
          type: string
          example: ''
      type: object
    reason:
      title: Reason
      description: Reason model
      properties:
        code:
          description: ''
          type: string
        message:
          description: ''
          type: string
      type: object
    fraud:
      title: Fraud screening
      description: Fraud screening model
      properties:
        scoring:
          description: ''
          type: string
          example: '0'
        result:
          description: ''
          type: string
          example: ACCEPTED
        review:
          description: ''
          type: string
          example: ''
      type: object
    Hipay.Gateway.AvailablePaymentProductBundle.Response.AvailablePaymentProduct.AvailablePaymentProduct_PaymentProduct_:
      description: AvailablePaymentProduct model
      properties:
        PaymentProduct:
          items:
            $ref: '#/components/schemas/PaymentProduct'
          type: array
      required:
      - PaymentProduct
      title: AvailablePaymentProduct[PaymentProduct]
      type: object
    Hipay.Gateway.CommonBundle.Response.CommonResponse:
      description: Common Error model
      properties:
        code:
          description: Code
          format: int32
          type: integer
        description:
          description: Description
          type: string
        message:
          description: Message
          type: string
      title: CommonResponse
      type: object
    Hipay.Gateway.SecuritySettingBundle.Response.SecuritySetting.SecuritySetting:
      description: SecuritySetting model
      properties:
        hashing_algorithm:
          description: Hashing Algorithm
          example: SHA1
          type: string
          x-sort: '1'
      title: SecuritySetting
      type: object
    PaymentProduct:
      description: PaymentProduct model
      properties:
        code:
          description: Code
          example: visa
          type: string
          x-sort: '5'
        customer_description:
          description: Customer Description
          type: string
          x-sort: '15'
        description:
          description: Description
          example: VISA
          type: string
          x-sort: '10'
        id:
          description: Id
          example: 52DY02WM
          type: string
          x-sort: '1'
        payment_product_category_code:
          description: Payment Product Category Code
          example: credit-card
          type: string
          x-sort: '20'
        tokenizable:
          description: Tokenizable
          example: 'true'
          type: boolean
          x-sort: '25'
      title: PaymentProduct
      type: object
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
tags:
- name: payments
  description: Everything you need to create orders and transactions
- name: maintenance
  description: Perform operations (capture, refund) on transactions
- name: transaction
  description: Request all the details of existing transactions and orders
- description: Get the list of all available Payment products
  name: payment-products
- description: Get the hash algorithm
  name: security-settings
externalDocs:
  description: Find out more about HiPay
  url: https://developer.hipay.com/
