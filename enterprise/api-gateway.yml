openapi: 3.0.0
info:
  title: 'Hipay Payment Gateway'
  description: "The Gateway API allows you to get paid and manage orders and transactions.\n\nPlease note: this documentation describes the Gateway API parameters and response fields and allows you to test the platform in real time.\n\nThis page is to be used alongside the **[HiPay Enterprise Platform Overview documentation](https://developer.hipay.com/api-explorer/api-online-payments)**, which gives you more information and details on the HiPay Enterprise workflow. You may use both documents in parallel when integrating HiPay Enterprise.\n# Web service information\n## Gateway API base URLs\n| Environment | Base URL |\n| --- | --- |\n| Stage | [https://stage-api-gateway.hipay.com](https://stage-api-gateway.hipay.com) |\n| Production |  [https://api-gateway.hipay.com](https://api-gateway.hipay.com) |\n## Authentication\nAll requests to the HiPay Enterprise API require identification through *HTTP Basic Authentication*. Your API credentials can be found in the Integration section of your HiPay Enterprise back office. Most HTTP clients (including web browsers) have built-in support for HTTP basic authentication. If not, the following header must be included in all HTTP requests.\n`Authorization: Basic base64('API login>:<API password>')`\n"
  version: 1.5.0
servers:
  -
    url: 'https://stage-api-gateway.hipay.com'
    description: Stage
  -
    url: 'https://api-gateway.hipay.com'
    description: Production
paths:
  '/v3/order/{orderid}':
    get:
      tags:
        - Order
      operationId: get_api_order_consultation_public
      parameters:
        -
          name: orderid
          in: path
          description: 'Unique merchant orderid.'
          required: true
          schema:
            type: string
          example: ORD_202501_0001
      responses:
        '200':
          description: 'Order retrieved successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '401':
          description: 'An authentication error occurred/invalid credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 'This order is not found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        -
          ApiKeyAuth: []
        -
          BasicAuth: []
  '/v3/transaction/{transaction_reference}':
    get:
      tags:
        - Transaction
      operationId: get_api_transaction_consultation_public
      parameters:
        -
          name: transaction_reference
          in: path
          description: 'The unique identifier of the transaction.'
          required: true
          schema:
            type: string
            pattern: \d+
          example: '800000420435'
      responses:
        '200':
          description: 'Transaction retrieved successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '401':
          description: 'An authentication error occurred/invalid credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 'This transaction is not found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        -
          ApiKeyAuth: []
        -
          BasicAuth: []
  '/v3/transaction/refund/{transaction_reference}/operation':
    post:
      tags:
        - Transaction
      operationId: post_api_transaction_refund_public
      parameters:
        -
          name: transaction_reference
          in: path
          required: true
          schema:
            type: string
            pattern: \d+
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationDto'
      responses:
        '200':
          description: 'The refund operation was executed successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
        '400':
          description: 'The request was rejected due to a validation error.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 'An authentication error occurred/invalid credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 'This transaction is not found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '412':
          description: 'Insufficient Funds.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        -
          ApiKeyAuth: []
        -
          BasicAuth: []
components:
  schemas:
    OperationDto:
      required:
        - operation_id
        - amount
        - iban
        - bic
        - issuer_name
      properties:
        operation_id:
          description: 'Operation to be refunded.'
          type: integer
          example: 58372649965
        amount:
          description: 'Amount to be refunded.'
          type: number
          minimum: 0
          exclusiveMinimum: true
          example: 125.75
        iban:
          description: 'International Bank Account Number (IBAN).'
          type: string
          example: FR1420041010050500013M02606
        bic:
          description: 'Business Identifier Code (BIC).'
          type: string
          example: BNPAFRPPXXX
        issuer_name:
          description: 'Issuer name.'
          type: string
          example: 'John Doe'
      type: object
    Order:
      required:
        - id
        - merchant_order_id
        - attempts
        - amount
        - shipping
        - tax
        - customer
        - shipping_to
        - date_created
        - transactions
        - currency
        - decimals
      properties:
        id:
          description: 'Unique order ID.'
          type: integer
          example: '1537532589263'
        merchant_order_id:
          type: string
        attempts:
          description: 'Attempt identifier'
          type: integer
          example: 1
        amount:
          description: 'Total order amount, calculated as the sum of purchased items, plus shipping fees (if present), plus tax fees (if present).'
          type: string
          example: '8.99'
        shipping:
          description: 'The order shipping fee. It can be omitted if the shipping fee value is zero.'
          type: string
          example: '1.30'
        tax:
          description: 'The order tax fee. It can be omitted if the order tax value is zero...'
          type: string
          example: '1.10'
        customer:
          $ref: '#/components/schemas/Customer'
        shipping_to:
          $ref: '#/components/schemas/ShippingAddress'
        terminal_information:
          description: 'The customer terminal informations used for the order.'
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/TerminalInformation'
        date_created:
          type: string
          format: date-time
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction2'
        currency:
          $ref: '#/components/schemas/Currency'
        decimals:
          type: integer
          example: '2'
        billing_to:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/Address'
        custom_data:
          type: string
          nullable: true
      type: object
    Error:
      required:
        - message
        - code
      properties:
        message:
          type: string
        code:
          type: integer
        details:
          type: array
          items: {  }
          default: null
          nullable: true
        description:
          type: string
          nullable: true
      type: object
    Transaction:
      required:
        - id
        - attemptid
        - merchant_order_id
        - state
        - status
        - eci
        - amount
        - captured_amount
        - refunded_amount
        - credited_amount
        - chargebacked_amount
        - acquirer
        - issuer
        - device
        - forward_url
        - customer_country
        - date_created
        - date_updated
        - mid
        - operations
        - authorized_amount
        - currency
        - decimals
      properties:
        id:
          description: 'Unique transaction ID.'
          type: integer
          example: '2456731565945'
        order:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/Order2'
        attemptid:
          type: integer
        merchant_order_id:
          type: string
        state:
          $ref: '#/components/schemas/TransactionState'
        status:
          $ref: '#/components/schemas/Status'
        computed_authentication_status:
          description: 'Transaction computed authentication status.'
          example: 'Successful authentication'
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/ComputedAuthenticationStatus'
        reason:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/ReasonCode'
        eci:
          description: "Electronic Commerce Indicator (ECI).\n\nThe Electronic Commerce Indicator (ECI) is used by acquirers/issuers\n\nto determine the type of transaction being processed. The ECI value\n\nshould represent the source of the transaction request. That is, the\n\nenvironment that the cardholder used to provide the payment card details\n\nto the merchant. It is important that merchants set the correct ECI\n\nvalue during transaction processing to ensure that appropriate merchant\n\nservice rates are received."
          type: integer
          example: 7
        amount:
          description: 'Transaction amount.'
          type: string
          example: '125.75'
        captured_amount:
          description: 'Captured amount.'
          type: string
          example: '125.75'
        refunded_amount:
          description: 'Refunded amount.'
          type: string
          example: '0.00'
        credited_amount:
          description: 'Total credited.'
          type: string
          example: '125.75'
        chargebacked_amount:
          description: 'Chargebacked amount.'
          type: string
          example: '125.75'
        payment_product:
          description: 'The payment product used for processing current transaction.'
          example: visa
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/PaymentProduct'
        acquirer:
          $ref: '#/components/schemas/Acquirer'
        acquirer_tra:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/AcquirerTraContext'
        issuer:
          $ref: '#/components/schemas/Issuer'
        card:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/Card'
        debit_agreement:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/DebitAgreement'
        device:
          $ref: '#/components/schemas/Device'
        authentication:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/Authentication'
        authorization_code:
          type: string
          nullable: true
        forward_url:
          description: 'URL of the page on which to redirect the customer.'
          type: string
          example: ''
        fraud_screening:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/FraudResult'
        cvc_result:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/Cvc'
        customer_country:
          type: string
          example: FR
        date_created:
          type: string
          format: date-time
        date_updated:
          description: "Date of last status change.\n\nThis date must comply with ISO 8601."
          type: string
          format: date-time
        date_authorized:
          type: string
          format: date-time
          nullable: true
        mid:
          description: "Merchant id (MID).\n\nUnique identifier assigned to the merchant."
          type: integer
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation2'
        authorized_amount:
          description: 'Authorized amount.'
          type: string
          example: '125.75'
        currency:
          $ref: '#/components/schemas/Currency2'
        decimals:
          type: integer
          example: '2'
      type: object
    Operation:
      required:
        - type
        - status
        - amount
        - arn
        - date_created
        - id
        - currency
        - decimals
      properties:
        type:
          $ref: '#/components/schemas/OperationType'
        status:
          $ref: '#/components/schemas/OperationStatus'
        amount:
          description: 'Operation Amount.'
          type: string
          example: '10.00'
        arn:
          description: 'Acquirer Reference Number.'
          type: string
          example: '75064953264000221624949'
        merchant_reference:
          type: string
          nullable: true
        date_created:
          type: string
          format: date-time
        date_updated:
          type: string
          format: date-time
          nullable: true
        date_remitted:
          type: string
          format: date-time
          nullable: true
        date_processed:
          type: string
          format: date-time
          nullable: true
        date_reconciled:
          type: string
          format: date-time
          nullable: true
        id:
          type: integer
        currency:
          $ref: '#/components/schemas/Currency3'
        decimals:
          type: integer
          example: '2'
        caseid:
          type: string
          nullable: true
      type: object
    Customer:
      required:
        - email
        - phone
      properties:
        id:
          type: string
          example: '283749291'
          nullable: true
        firstname:
          description: 'The customer’s first name. This value will be use to pre-fill cardholder name on credit card payment form.'
          type: string
          example: Rose
          nullable: true
        email:
          description: 'The customer’s e-mail address.'
          type: string
          example: otto.graph@foobar.email
        phone:
          description: 'The customer’s phone.'
          type: string
          example: '01234567890'
        language:
          type: string
          example: en_GB
          nullable: true
      type: object
    ShippingAddress:
      properties:
        house_number:
          description: 'House number.'
          type: string
          example: '101'
          nullable: true
        house_extension:
          description: 'House extension.'
          type: string
          example: B
          nullable: true
        street:
          description: 'Street address.'
          type: string
          example: 'Rue de Rivoli'
          nullable: true
        street_additional:
          description: 'Additional address information of the customer (e.g., building, floor, flat, etc.).'
          type: string
          example: 'Immeuble B'
          nullable: true
        locality:
          description: City.
          type: string
          example: Paris
          nullable: true
        locality_additional:
          description: 'The USA state or the Canada state of the customer making the purchase. Send this information only if the address country of the customer is US (USA) or CA (Canada)'
          type: string
          example: ''
          nullable: true
        postal_code:
          description: 'The zip or postal code of the customer.'
          type: string
          example: '75001'
          nullable: true
        country:
          description: 'Country code to which the order is being shipped. This two-letter country code complies with ISO 3166-1 (alpha 2).'
          type: string
          example: FR
          nullable: true
      type: object
    TerminalInformation:
      properties:
        payment_context:
          description: 'Payment context'
          type: string
          example: online
          nullable: true
        input_mode:
          description: 'Input mode'
          type: string
          example: contact
          nullable: true
        aid:
          description: Aid
          type: string
          example: A0000000422010
          nullable: true
        payment_gateway:
          description: 'Payment gateway'
          type: string
          example: nepting
          nullable: true
        authorization_code:
          description: 'Authorization code'
          type: string
          example: '00'
          nullable: true
        authorization_number:
          description: 'Authorization number'
          type: string
          example: '963379'
          nullable: true
        customer_receipt:
          description: 'Customer receipt'
          type: string
          nullable: true
        payment_source:
          description: 'Payment source'
          type: string
          example: 'IPN Nepting'
          nullable: true
        payment_terminal_serial_number:
          description: 'Payment terminal serial number'
          type: string
          nullable: true
        idsa:
          description: 'Acceptance system identifier assigned by an acquirer'
          type: string
          nullable: true
        rts:
          description: 'Transaction ID generated by the issuer auth system'
          type: string
          nullable: true
        card_entry_mode:
          description: 'Card entry mode'
          example: magstripe
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/CardEntryMode'
        file_number:
          description: 'File number'
          type: string
          nullable: true
      type: object
    Transaction2:
      required:
        - id
        - attemptid
        - state
        - status
        - eci
        - amount
        - captured_amount
        - refunded_amount
        - credited_amount
        - chargebacked_amount
        - acquirer
        - issuer
        - device
        - forward_url
        - customer_country
        - date_created
        - date_updated
        - mid
        - operations
        - authorized_amount
        - currency
        - decimals
      properties:
        id:
          description: 'Unique transaction ID.'
          type: integer
          example: '2456731565945'
        attemptid:
          type: integer
        state:
          $ref: '#/components/schemas/TransactionState2'
        status:
          $ref: '#/components/schemas/Status2'
        computed_authentication_status:
          description: 'Transaction computed authentication status.'
          example: 'Successful authentication'
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/ComputedAuthenticationStatus2'
        reason:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/ReasonCode2'
        eci:
          description: "Electronic Commerce Indicator (ECI).\n\nThe Electronic Commerce Indicator (ECI) is used by acquirers/issuers\n\nto determine the type of transaction being processed. The ECI value\n\nshould represent the source of the transaction request. That is, the\n\nenvironment that the cardholder used to provide the payment card details\n\nto the merchant. It is important that merchants set the correct ECI\n\nvalue during transaction processing to ensure that appropriate merchant\n\nservice rates are received."
          type: integer
          example: 7
        amount:
          description: 'Transaction amount.'
          type: string
          example: '125.75'
        captured_amount:
          description: 'Captured amount.'
          type: string
          example: '125.75'
        refunded_amount:
          description: 'Refunded amount.'
          type: string
          example: '0.00'
        credited_amount:
          description: 'Total credited.'
          type: string
          example: '125.75'
        chargebacked_amount:
          description: 'Chargebacked amount.'
          type: string
          example: '125.75'
        payment_product:
          description: 'The payment product used for processing current transaction.'
          example: visa
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/PaymentProduct2'
        acquirer:
          $ref: '#/components/schemas/Acquirer2'
        acquirer_tra:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/AcquirerTraContext2'
        issuer:
          $ref: '#/components/schemas/Issuer2'
        card:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/Card2'
        debit_agreement:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/DebitAgreement2'
        device:
          $ref: '#/components/schemas/Device2'
        authentication:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/Authentication2'
        authorization_code:
          type: string
          nullable: true
        forward_url:
          description: 'URL of the page on which to redirect the customer.'
          type: string
          example: ''
        fraud_screening:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/FraudResult2'
        cvc_result:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/Cvc2'
        customer_country:
          type: string
          example: FR
        date_created:
          type: string
          format: date-time
        date_updated:
          description: "Date of last status change.\n\nThis date must comply with ISO 8601."
          type: string
          format: date-time
        date_authorized:
          type: string
          format: date-time
          nullable: true
        mid:
          description: "Merchant id (MID).\n\nUnique identifier assigned to the merchant."
          type: integer
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation3'
        authorized_amount:
          description: 'Authorized amount.'
          type: string
          example: '125.75'
        currency:
          $ref: '#/components/schemas/Currency'
        decimals:
          type: integer
          example: '2'
      type: object
    Currency:
      type: string
      enum:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BRL
        - BSD
        - BTN
        - BWP
        - BYR
        - BZD
        - CAD
        - CDF
        - CHF
        - CLP
        - CNY
        - COP
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EEK
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - FRF
        - GBP
        - GEL
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - INR
        - IQD
        - IRR
        - ISK
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LTL
        - LVL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SKK
        - SLL
        - SOS
        - SRD
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMM
        - TMT
        - TND
        - TOP
        - TRY
        - TTD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XCD
        - XOF
        - XPF
        - YER
        - ZAR
        - ZMK
        - ZWL
    Address:
      properties:
        house_number:
          description: 'House number.'
          type: string
          example: '101'
          nullable: true
        house_extension:
          description: 'House extension.'
          type: string
          example: B
          nullable: true
        street:
          description: 'Street address.'
          type: string
          example: 'Rue de Rivoli'
          nullable: true
        street_additional:
          description: 'Additional address information of the customer (e.g., building, floor, flat, etc.).'
          type: string
          example: 'Immeuble B'
          nullable: true
        locality:
          description: City.
          type: string
          example: Paris
          nullable: true
        locality_additional:
          description: 'The USA state or the Canada state of the customer making the purchase. Send this information only if the address country of the customer is US (USA) or CA (Canada)'
          type: string
          example: ''
          nullable: true
        postal_code:
          description: 'The zip or postal code of the customer.'
          type: string
          example: '75001'
          nullable: true
        country:
          description: 'Country code to which the order is being shipped. This two-letter country code complies with ISO 3166-1 (alpha 2).'
          type: string
          example: FR
          nullable: true
      type: object
    Order2:
      required:
        - id
        - attempts
        - amount
        - shipping
        - tax
        - customer
        - shipping_to
        - date_created
        - currency
        - decimals
      properties:
        id:
          description: 'Unique order ID.'
          type: integer
          example: '1537532589263'
        attempts:
          description: 'Attempt identifier'
          type: integer
          example: 1
        amount:
          description: 'Total order amount, calculated as the sum of purchased items, plus shipping fees (if present), plus tax fees (if present).'
          type: string
          example: '8.99'
        shipping:
          description: 'The order shipping fee. It can be omitted if the shipping fee value is zero.'
          type: string
          example: '1.30'
        tax:
          description: 'The order tax fee. It can be omitted if the order tax value is zero...'
          type: string
          example: '1.10'
        customer:
          $ref: '#/components/schemas/Customer2'
        shipping_to:
          $ref: '#/components/schemas/ShippingAddress2'
        terminal_information:
          description: 'The customer terminal informations used for the order.'
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/TerminalInformation2'
        date_created:
          type: string
          format: date-time
        currency:
          $ref: '#/components/schemas/Currency2'
        decimals:
          type: integer
          example: '2'
        billing_to:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/Address2'
        custom_data:
          type: string
          nullable: true
      type: object
    TransactionState:
      type: string
      enum:
        - completed
        - waiting
        - pending
        - declined
        - forwarding
        - error
    Status:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 52
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 42
        - 43
        - 75
        - 16
        - 55
        - 17
        - 18
        - 54
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 65
        - 25
        - 26
        - 27
        - 28
        - 29
        - 34
        - 30
        - 31
        - 32
        - 40
        - 41
        - 80
        - 81
        - 82
        - 83
        - 50
        - 51
        - 53
        - 57
        - 69
        - 66
        - 72
        - 74
        - 77
        - 78
    ComputedAuthenticationStatus:
      type: string
      enum:
        - 'No authentication'
        - 'Abandoned strong authentication'
        - 'Unsuccessful authentication attempted'
        - 'Challenge authentication'
        - 'Frictionless authentication'
        - 'Successful authentication'
        - 'Failed authentication'
        - 'Unknown authentication'
    ReasonCode:
      properties:
        code:
          type: integer
          nullable: true
        reason:
          type: string
          nullable: true
      type: object
    PaymentProduct:
      required:
        - name
        - description
      properties:
        payment_method:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/PaymentMethod'
        name:
          type: string
        description:
          type: string
      type: object
    Acquirer:
      properties:
        transaction_reference:
          description: 'Unique Transaction Identifier.'
          type: string
          example: '800000790677'
          nullable: true
      type: object
    AcquirerTraContext:
      type: object
    Issuer:
      properties:
        fullname:
          type: string
          nullable: true
        institution:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
      type: object
    Card:
      properties:
        pan:
          type: string
          nullable: true
        last_digits:
          type: string
          nullable: true
        scheme:
          type: string
          nullable: true
        category:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        bin:
          type: integer
          nullable: true
      type: object
    DebitAgreement:
      required:
        - id
        - status
      properties:
        id:
          type: integer
        scheme_reference_data:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/Status3'
        recurring_payment_end_date_string:
          type: string
          nullable: true
      type: object
    Device:
      required:
        - ip_address
      properties:
        id:
          type: string
          nullable: true
        ip_address:
          description: 'The IP address of the Device'
          type: string
          example: 127.0.0.1
      type: object
    Authentication:
      required:
        - eci
      properties:
        enrollment_status:
          description: ''
          type: string
          example: 'N'
          nullable: true
        enrollment_message:
          description: ''
          type: string
          example: 'Cardholder Not Enrolled'
          nullable: true
        authentication_status:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/Authentication3'
        authentication_message:
          type: string
          nullable: true
        eci:
          description: "Electronic Commerce Indicator (ECI).\n\nThe Electronic Commerce Indicator (ECI) is used by acquirers/issuers\n\nto determine the type of transaction being processed. The ECI value\n\nshould represent the source of the transaction request. That is, the\n\nenvironment that the cardholder used to provide the payment card details\n\nto the merchant. It is important that merchants set the correct ECI\n\nvalue during transaction processing to ensure that appropriate merchant\n\nservice rates are received."
          type: integer
          example: 5
        sca_preference:
          description: "To indicate the preference for a frictionless flow during the authentication request, the merchant may send the sca_preference parameter.\n\nDepending on the merchant's assessment of the risk of fraud, specific values may be sent.\n\nThis parameter can only be used by merchants who have a fraud risk assessment mechanism of their own and who have subscribed to the SCA Preference merchant option.\n\nPlease contact your account manager to request it.\n\n`1` : No Preference.\n\n    If you are not sure about the transaction's risk of fraud, use this value. Using this value for all your transactions may result in a high strong customer authentication rate.\n\n`2` : No Challenge\n\n    If you think this transaction is safe. This will tell the acquirer a frictionless flow is preferred.\n\n`3` : Challenge Requested\n\n    If you think this transaction may be at risk, use this value. This will tell the acquirer that a strong customer authentication may be required, depending on the PSD2 specific information you sent along with the transaction."
          example: 1
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/Preference'
        method:
          description: "To indicate the authentication method used :\n\n - 3DSecure\n\n - ApplePay"
          type: string
          example: 3DSecure
          nullable: true
        three_ds_version:
          description: '3D Secure Version'
          type: string
          example: '2'
          nullable: true
        three_ds_authentication_method:
          description: "3D Secure Authentication Method:\n\n - challenge\n\n - frictionless\n\n - <i>empty</i>"
          example: frictionless
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/ThreeDSAuthenticationMethod'
        three_ds_liability:
          description: "3D Secure payment liability shift:\n\n - issuer\n\n - merchant\n\n - not applicable"
          example: issuer
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/ThreeDSAuthenticationLiability'
      type: object
    FraudResult:
      required:
        - result
        - review
        - score
      properties:
        result:
          $ref: '#/components/schemas/Result'
        review:
          $ref: '#/components/schemas/Review'
        score:
          type: integer
          example: 200
      type: object
    Cvc:
      type: string
      enum:
        - Match
        - 'No Match'
        - 'Not Processed'
        - Missing
        - 'Not Supported'
    Operation2:
      required:
        - type
        - status
        - amount
        - arn
        - date_created
        - id
        - currency
        - decimals
      properties:
        type:
          $ref: '#/components/schemas/OperationType2'
        status:
          $ref: '#/components/schemas/OperationStatus2'
        amount:
          description: 'Operation Amount.'
          type: string
          example: '10.00'
        arn:
          description: 'Acquirer Reference Number.'
          type: string
          example: '75064953264000221624949'
        merchant_reference:
          type: string
          nullable: true
        date_created:
          type: string
          format: date-time
        date_updated:
          type: string
          format: date-time
          nullable: true
        date_remitted:
          type: string
          format: date-time
          nullable: true
        date_processed:
          type: string
          format: date-time
          nullable: true
        date_reconciled:
          type: string
          format: date-time
          nullable: true
        id:
          type: integer
        currency:
          $ref: '#/components/schemas/Currency2'
        decimals:
          type: integer
          example: '2'
        caseid:
          type: string
          nullable: true
      type: object
    Currency2:
      type: string
      enum:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BRL
        - BSD
        - BTN
        - BWP
        - BYR
        - BZD
        - CAD
        - CDF
        - CHF
        - CLP
        - CNY
        - COP
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EEK
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - FRF
        - GBP
        - GEL
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - INR
        - IQD
        - IRR
        - ISK
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LTL
        - LVL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SKK
        - SLL
        - SOS
        - SRD
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMM
        - TMT
        - TND
        - TOP
        - TRY
        - TTD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XCD
        - XOF
        - XPF
        - YER
        - ZAR
        - ZMK
        - ZWL
    OperationType:
      type: string
      enum:
        - CAPTURE
        - CREDIT
        - REFUND
        - CHGBCK
        - CHGBCK_REFUND
        - RDR
    OperationStatus:
      type: string
      enum:
        - CANCELLED
        - COMPLETED
        - CREATED
        - FAILURE
        - NOT_PROCESSED
        - PENDING
        - RECONCILED
        - REMITTED
        - REQUESTED
        - RETRIED
        - SPLIT
        - CHGBCK
        - CHGBCK_REFUND
    Currency3:
      type: string
      enum:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BRL
        - BSD
        - BTN
        - BWP
        - BYR
        - BZD
        - CAD
        - CDF
        - CHF
        - CLP
        - CNY
        - COP
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EEK
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - FRF
        - GBP
        - GEL
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - INR
        - IQD
        - IRR
        - ISK
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LTL
        - LVL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SKK
        - SLL
        - SOS
        - SRD
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMM
        - TMT
        - TND
        - TOP
        - TRY
        - TTD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XCD
        - XOF
        - XPF
        - YER
        - ZAR
        - ZMK
        - ZWL
    CardEntryMode:
      type: string
      enum:
        - 'Not specified'
        - Magstripe
        - 'Contactless chip transaction using EMV chip data'
        - 'Contactless chip transaction using magstripe data'
        - ICC
        - 'Manual entry'
        - 'Magstripe, after attempt to read chip'
        - 'Provided by a server'
        - Card-on-File
    TransactionState2:
      type: string
      enum:
        - completed
        - waiting
        - pending
        - declined
        - forwarding
        - error
    Status2:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 52
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 42
        - 43
        - 75
        - 16
        - 55
        - 17
        - 18
        - 54
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 65
        - 25
        - 26
        - 27
        - 28
        - 29
        - 34
        - 30
        - 31
        - 32
        - 40
        - 41
        - 80
        - 81
        - 82
        - 83
        - 50
        - 51
        - 53
        - 57
        - 69
        - 66
        - 72
        - 74
        - 77
        - 78
    ComputedAuthenticationStatus2:
      type: string
      enum:
        - 'No authentication'
        - 'Abandoned strong authentication'
        - 'Unsuccessful authentication attempted'
        - 'Challenge authentication'
        - 'Frictionless authentication'
        - 'Successful authentication'
        - 'Failed authentication'
        - 'Unknown authentication'
    ReasonCode2:
      properties:
        code:
          type: integer
          nullable: true
        reason:
          type: string
          nullable: true
      type: object
    PaymentProduct2:
      required:
        - name
        - description
      properties:
        payment_method:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/PaymentMethod2'
        name:
          type: string
        description:
          type: string
      type: object
    Acquirer2:
      properties:
        transaction_reference:
          description: 'Unique Transaction Identifier.'
          type: string
          example: '800000790677'
          nullable: true
      type: object
    AcquirerTraContext2:
      type: object
    Issuer2:
      properties:
        fullname:
          type: string
          nullable: true
        institution:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
      type: object
    Card2:
      properties:
        pan:
          type: string
          nullable: true
        last_digits:
          type: string
          nullable: true
        scheme:
          type: string
          nullable: true
        category:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        bin:
          type: integer
          nullable: true
      type: object
    DebitAgreement2:
      required:
        - id
        - status
      properties:
        id:
          type: integer
        scheme_reference_data:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/Status4'
        recurring_payment_end_date_string:
          type: string
          nullable: true
      type: object
    Device2:
      required:
        - ip_address
      properties:
        id:
          type: string
          nullable: true
        ip_address:
          description: 'The IP address of the Device'
          type: string
          example: 127.0.0.1
      type: object
    Authentication2:
      required:
        - eci
      properties:
        enrollment_status:
          description: ''
          type: string
          example: 'N'
          nullable: true
        enrollment_message:
          description: ''
          type: string
          example: 'Cardholder Not Enrolled'
          nullable: true
        authentication_status:
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/Authentication4'
        authentication_message:
          type: string
          nullable: true
        eci:
          description: "Electronic Commerce Indicator (ECI).\n\nThe Electronic Commerce Indicator (ECI) is used by acquirers/issuers\n\nto determine the type of transaction being processed. The ECI value\n\nshould represent the source of the transaction request. That is, the\n\nenvironment that the cardholder used to provide the payment card details\n\nto the merchant. It is important that merchants set the correct ECI\n\nvalue during transaction processing to ensure that appropriate merchant\n\nservice rates are received."
          type: integer
          example: 5
        sca_preference:
          description: "To indicate the preference for a frictionless flow during the authentication request, the merchant may send the sca_preference parameter.\n\nDepending on the merchant's assessment of the risk of fraud, specific values may be sent.\n\nThis parameter can only be used by merchants who have a fraud risk assessment mechanism of their own and who have subscribed to the SCA Preference merchant option.\n\nPlease contact your account manager to request it.\n\n`1` : No Preference.\n\n    If you are not sure about the transaction's risk of fraud, use this value. Using this value for all your transactions may result in a high strong customer authentication rate.\n\n`2` : No Challenge\n\n    If you think this transaction is safe. This will tell the acquirer a frictionless flow is preferred.\n\n`3` : Challenge Requested\n\n    If you think this transaction may be at risk, use this value. This will tell the acquirer that a strong customer authentication may be required, depending on the PSD2 specific information you sent along with the transaction."
          example: 1
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/Preference2'
        method:
          description: "To indicate the authentication method used :\n\n - 3DSecure\n\n - ApplePay"
          type: string
          example: 3DSecure
          nullable: true
        three_ds_version:
          description: '3D Secure Version'
          type: string
          example: '2'
          nullable: true
        three_ds_authentication_method:
          description: "3D Secure Authentication Method:\n\n - challenge\n\n - frictionless\n\n - <i>empty</i>"
          example: frictionless
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/ThreeDSAuthenticationMethod2'
        three_ds_liability:
          description: "3D Secure payment liability shift:\n\n - issuer\n\n - merchant\n\n - not applicable"
          example: issuer
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/ThreeDSAuthenticationLiability2'
      type: object
    FraudResult2:
      required:
        - result
        - review
        - score
      properties:
        result:
          $ref: '#/components/schemas/Result2'
        review:
          $ref: '#/components/schemas/Review2'
        score:
          type: integer
          example: 200
      type: object
    Cvc2:
      type: string
      enum:
        - Match
        - 'No Match'
        - 'Not Processed'
        - Missing
        - 'Not Supported'
    Operation3:
      required:
        - type
        - status
        - amount
        - arn
        - date_created
        - id
        - currency
        - decimals
      properties:
        type:
          $ref: '#/components/schemas/OperationType3'
        status:
          $ref: '#/components/schemas/OperationStatus3'
        amount:
          description: 'Operation Amount.'
          type: string
          example: '10.00'
        arn:
          description: 'Acquirer Reference Number.'
          type: string
          example: '75064953264000221624949'
        merchant_reference:
          type: string
          nullable: true
        date_created:
          type: string
          format: date-time
        date_updated:
          type: string
          format: date-time
          nullable: true
        date_remitted:
          type: string
          format: date-time
          nullable: true
        date_processed:
          type: string
          format: date-time
          nullable: true
        date_reconciled:
          type: string
          format: date-time
          nullable: true
        id:
          type: integer
        currency:
          $ref: '#/components/schemas/Currency'
        decimals:
          type: integer
          example: '2'
        caseid:
          type: string
          nullable: true
      type: object
    Customer2:
      required:
        - email
        - phone
      properties:
        id:
          type: string
          example: '283749291'
          nullable: true
        firstname:
          description: 'The customer’s first name. This value will be use to pre-fill cardholder name on credit card payment form.'
          type: string
          example: Rose
          nullable: true
        email:
          description: 'The customer’s e-mail address.'
          type: string
          example: otto.graph@foobar.email
        phone:
          description: 'The customer’s phone.'
          type: string
          example: '01234567890'
        language:
          type: string
          example: en_GB
          nullable: true
      type: object
    ShippingAddress2:
      properties:
        house_number:
          description: 'House number.'
          type: string
          example: '101'
          nullable: true
        house_extension:
          description: 'House extension.'
          type: string
          example: B
          nullable: true
        street:
          description: 'Street address.'
          type: string
          example: 'Rue de Rivoli'
          nullable: true
        street_additional:
          description: 'Additional address information of the customer (e.g., building, floor, flat, etc.).'
          type: string
          example: 'Immeuble B'
          nullable: true
        locality:
          description: City.
          type: string
          example: Paris
          nullable: true
        locality_additional:
          description: 'The USA state or the Canada state of the customer making the purchase. Send this information only if the address country of the customer is US (USA) or CA (Canada)'
          type: string
          example: ''
          nullable: true
        postal_code:
          description: 'The zip or postal code of the customer.'
          type: string
          example: '75001'
          nullable: true
        country:
          description: 'Country code to which the order is being shipped. This two-letter country code complies with ISO 3166-1 (alpha 2).'
          type: string
          example: FR
          nullable: true
      type: object
    TerminalInformation2:
      properties:
        payment_context:
          description: 'Payment context'
          type: string
          example: online
          nullable: true
        input_mode:
          description: 'Input mode'
          type: string
          example: contact
          nullable: true
        aid:
          description: Aid
          type: string
          example: A0000000422010
          nullable: true
        payment_gateway:
          description: 'Payment gateway'
          type: string
          example: nepting
          nullable: true
        authorization_code:
          description: 'Authorization code'
          type: string
          example: '00'
          nullable: true
        authorization_number:
          description: 'Authorization number'
          type: string
          example: '963379'
          nullable: true
        customer_receipt:
          description: 'Customer receipt'
          type: string
          nullable: true
        payment_source:
          description: 'Payment source'
          type: string
          example: 'IPN Nepting'
          nullable: true
        payment_terminal_serial_number:
          description: 'Payment terminal serial number'
          type: string
          nullable: true
        idsa:
          description: 'Acceptance system identifier assigned by an acquirer'
          type: string
          nullable: true
        rts:
          description: 'Transaction ID generated by the issuer auth system'
          type: string
          nullable: true
        card_entry_mode:
          description: 'Card entry mode'
          example: magstripe
          nullable: true
          oneOf:
            -
              $ref: '#/components/schemas/CardEntryMode2'
        file_number:
          description: 'File number'
          type: string
          nullable: true
      type: object
    Address2:
      properties:
        house_number:
          description: 'House number.'
          type: string
          example: '101'
          nullable: true
        house_extension:
          description: 'House extension.'
          type: string
          example: B
          nullable: true
        street:
          description: 'Street address.'
          type: string
          example: 'Rue de Rivoli'
          nullable: true
        street_additional:
          description: 'Additional address information of the customer (e.g., building, floor, flat, etc.).'
          type: string
          example: 'Immeuble B'
          nullable: true
        locality:
          description: City.
          type: string
          example: Paris
          nullable: true
        locality_additional:
          description: 'The USA state or the Canada state of the customer making the purchase. Send this information only if the address country of the customer is US (USA) or CA (Canada)'
          type: string
          example: ''
          nullable: true
        postal_code:
          description: 'The zip or postal code of the customer.'
          type: string
          example: '75001'
          nullable: true
        country:
          description: 'Country code to which the order is being shipped. This two-letter country code complies with ISO 3166-1 (alpha 2).'
          type: string
          example: FR
          nullable: true
      type: object
    PaymentMethod:
      required:
        - name
        - description
      properties:
        name:
          type: string
        description:
          type: string
      type: object
    Status3:
      type: string
      enum:
        - available
        - created
        - error
        - incomplete
        - pending
        - suspended
        - terminated
    Authentication3:
      type: string
      enum:
        - 'Authentication Successful'
        - 'Authentication Attempt Performed'
        - 'Authentication Failed'
        - 'Authentication Could Not Be Performed'
        - Error
        - 'Not applicable'
        - 'Cardholder challenge required'
        - 'Not authenticated because the issuer is rejecting authentication'
        - 'Challenge required; decoupled authentication confirmed'
        - 'Informational only; 3DS Requestor challenge preference acknowledged'
        - 'Mastercard Delegated Authentication'
    Preference:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 7
    ThreeDSAuthenticationMethod:
      type: string
      enum:
        - challenge
        - frictionless
        - ''
    ThreeDSAuthenticationLiability:
      type: string
      enum:
        - issuer
        - merchant
        - 'not applicable'
    Result:
      type: string
      enum:
        - NOT_LAUNCHED
        - PENDING
        - ACCEPTED
        - 'REQUEST EXEMPTION'
        - BLOCKED
        - CHALLENGED
        - AUTHENTICATE
        - FORCE_AUTHENTICATE
        - OVERRIDE
        - 'ACCEPT WITH NO PREFERENCE'
        - DENIED
        - ALLOWED
    Review:
      type: string
      enum:
        - ALLOWED
        - PENDING
        - DENIED
    OperationType2:
      type: string
      enum:
        - CAPTURE
        - CREDIT
        - REFUND
        - CHGBCK
        - CHGBCK_REFUND
        - RDR
    OperationStatus2:
      type: string
      enum:
        - CANCELLED
        - COMPLETED
        - CREATED
        - FAILURE
        - NOT_PROCESSED
        - PENDING
        - RECONCILED
        - REMITTED
        - REQUESTED
        - RETRIED
        - SPLIT
        - CHGBCK
        - CHGBCK_REFUND
    PaymentMethod2:
      required:
        - name
        - description
      properties:
        name:
          type: string
        description:
          type: string
      type: object
    Status4:
      type: string
      enum:
        - available
        - created
        - error
        - incomplete
        - pending
        - suspended
        - terminated
    Authentication4:
      type: string
      enum:
        - 'Authentication Successful'
        - 'Authentication Attempt Performed'
        - 'Authentication Failed'
        - 'Authentication Could Not Be Performed'
        - Error
        - 'Not applicable'
        - 'Cardholder challenge required'
        - 'Not authenticated because the issuer is rejecting authentication'
        - 'Challenge required; decoupled authentication confirmed'
        - 'Informational only; 3DS Requestor challenge preference acknowledged'
        - 'Mastercard Delegated Authentication'
    Preference2:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 7
    ThreeDSAuthenticationMethod2:
      type: string
      enum:
        - challenge
        - frictionless
        - ''
    ThreeDSAuthenticationLiability2:
      type: string
      enum:
        - issuer
        - merchant
        - 'not applicable'
    Result2:
      type: string
      enum:
        - NOT_LAUNCHED
        - PENDING
        - ACCEPTED
        - 'REQUEST EXEMPTION'
        - BLOCKED
        - CHALLENGED
        - AUTHENTICATE
        - FORCE_AUTHENTICATE
        - OVERRIDE
        - 'ACCEPT WITH NO PREFERENCE'
        - DENIED
        - ALLOWED
    Review2:
      type: string
      enum:
        - ALLOWED
        - PENDING
        - DENIED
    OperationType3:
      type: string
      enum:
        - CAPTURE
        - CREDIT
        - REFUND
        - CHGBCK
        - CHGBCK_REFUND
        - RDR
    OperationStatus3:
      type: string
      enum:
        - CANCELLED
        - COMPLETED
        - CREATED
        - FAILURE
        - NOT_PROCESSED
        - PENDING
        - RECONCILED
        - REMITTED
        - REQUESTED
        - RETRIED
        - SPLIT
        - CHGBCK
        - CHGBCK_REFUND
    CardEntryMode2:
      type: string
      enum:
        - 'Not specified'
        - Magstripe
        - 'Contactless chip transaction using EMV chip data'
        - 'Contactless chip transaction using magstripe data'
        - ICC
        - 'Manual entry'
        - 'Magstripe, after attempt to read chip'
        - 'Provided by a server'
        - Card-on-File
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    ApiKeyAuth:
      type: apiKey
      name: X-API-KEY
      in: header
tags:
  -
    name: Order
  -
    name: Transaction
externalDocs:
  description: 'Find out more about HiPay'
  url: 'https://developer.hipay.com/'
